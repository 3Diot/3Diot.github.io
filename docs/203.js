"use strict";
(this["webpackChunkname"] = this["webpackChunkname"] || []).push([[203],{

/***/ 203:
/***/ ((module) => {

module.exports = "<div id=\"scroll_progress_bar\"></div>\n<div style=\"position: fixed;z-index:-99;\" id=\"svg_bg\"></div>\n<div id=\"gradient_bg\"></div>   \n<!-- this checkbox holds state of whether modal is visible or not -->\n<input checked type=\"checkbox\" id=\"toggle-sitemap\">\n<div id=\"sitemap\"> \n  <label for=\"toggle-sitemap\"><span>Hide</span> <span>Show </span>Sitemap</label>\n</div>\n<div id='pageTransitioneer'><p>Don't Look! I'm changing!</p></div>\n<div style=\"height:30px;\"></div>\n\n<div id=\"header\">\n  <div id=\"header_nav\">\n    <h1><a style=\"cursor: pointer;\" href=\"./\">CVMiniGames</a> | <a href=\"./\" id=\"title\"></a></h1>\n    <p><a style=\"cursor: pointer;\" href=\"https://www.cryptovoxels.com/play?coords=N@1447E,1128S\">PLAY NOW</a></p>\n    <p id=\"summary\"></p>\n  </div>\n  <span id=\"header_bg_wrapper\"><div id=\"header_bg\"></div></span> \n</div>\n<div style=\"height:30px;\"></div>\n\n<div class='broider' id='articleContent'>\n  <div id=\"outline\"></div>\n  <div id=\"content\"></div>\n</div>\n<div id=\"footer\">\n  <span id=\"footer_bg_wrapper\"><div id=\"tracer\"></div><div id=\"footer_bg\"></div></span> \n</div>\n<div style=\"height:200px\"></div>\n<p style=\"padding:10px; text-align:center\">Thank you for reading!</p>\n\n<script tag=\"templateScript\" type=\"text/javascript\">\n// Page Load Logic and Routing\nconst prevPage = async () => {window.prevPage = window.location.href.replace(window.origin,'')}; prevPage();\nconst redirect = async (event) => { window.history.pushState({}, '', event.target.href); popState(event); }\nconst popState = async (event) => { event.preventDefault();\n    var location = event.target.href || event.target.location.href\n    let route = location.replace(window.origin,'');\n    if (route.split(\"#\")[0] != window.prevPage.split(\"#\")[0]){ prevPage(); window.handleRoute( route ); }; \n    route.indexOf('#') == -1 && window.scrollTo({ top: 0, behavior: 'smooth' });\n    let t = document.getElementById(route.split('#')[1]); t && t.scrollIntoView({ behavior: 'smooth' });\n}; window.onpopstate = function (event) { popState(event); };\n</script>\n  \n<script tag=\"templateScript\" type=\"text/javascript\">\n//  svg_bg -> main.js creates ands animate an svg\nwindow.rir = (min, max) => Math.floor(Math.random() * (Math.floor(max) - Math.ceil(min) + 1)) + Math.ceil(min);\nwindow.createSvgBg = async () => { \n    // console.log('createSvgBg')\n    // Create cubes\n    const svg1 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    svg1.setAttribute (\"width\", \"100vw\" ); svg1.setAttribute (\"height\", \"100vh\" ); \n    Array(rir(15,25)).fill().map( () => {  \n        const x = rir(0,200)+'vh'; const y = rir(0,100)+'vh';\n        const size = rir(40,80)\n        var rect = document.createElementNS(\"http://www.w3.org/2000/svg\", 'rect');\n        rect.setAttribute('x', x); rect.setAttribute('y', y);\n        rect.setAttribute('height', size); rect.setAttribute('width', size);\n        rect.setAttribute('fill', ['red','green','orange', 'blue'][rir(0,3)]);\n        svg1.appendChild(rect);\n    }) \n    // Animate Cubes\n    r = document.getElementById('svg_bg'); r.innerHTML = ''; r.appendChild(svg1) \n    svg1.querySelectorAll('rect').forEach(rect => { \n        let x = parseInt(rect.getAttribute('x').slice(0, -2))\n        let y = parseInt(rect.getAttribute('y').slice(0, -2)); \n        rect.animate([ \n            {x: x-rir(0,10)+'vh', y: y-rir(100,125)+'vh'},\n            {x: x+rir(0,10)+'vh', y: y+rir(100,125)+'vh'},\n        ], { \n            duration: 20000,\n            iterations: Infinity,\n        }); \n    }); \n}; \ncreateSvgBg() && setInterval(createSvgBg,20000) \n</script>\n\n<script tag=\"templateScript\" type=\"text/javascript\">\n  // gradient_bg\n  dragTarget = document.querySelector(\"#sitemap\"); \n  inDrag = window.inDrag ? inDrag : false;\n  function downFN(e) {\n      inDrag = true;\n      objInitLeft = dragTarget.offsetLeft; objInitTop = dragTarget.offsetTop;\n      dragStartX = e.pageX || e.targetTouches[0].clientX; \n      dragStartY = e.pageY || e.targetTouches[0].clientY; \n  }\n  function moveFN(e) {\n      if (!inDrag) {return;} \n      e.preventDefault();\n      dragToX = e.pageX || e.targetTouches[0].clientX; \n      dragToY = e.pageY || e.targetTouches[0].clientY; \n      dragTarget.style.left = (objInitLeft + dragToX-dragStartX) + \"px\";\n      dragTarget.style.top = (objInitTop + dragToY-dragStartY) + \"px\";\n    } \n  (function() {\n    // start = mousepos & objInit = topleft of obj\n    var dragStartX, dragStartY, objInitLeft, objInitTop = 0;\n    dragTarget.addEventListener(\"mousedown\", downFN );\n    document.addEventListener(\"mousemove\", moveFN,{ passive:false });\n    document.addEventListener(\"mouseup\", function(e) {inDrag = false}); \n    dragTarget.addEventListener(\"touchstart\", downFN );\n    dragTarget.addEventListener(\"touchmove\", moveFN,{ passive:false });\n    dragTarget.addEventListener(\"touchend\", function(e) {inDrag = false;});\n  }())\n</script>\n\n<script tag=\"templateScript\" type=\"text/javascript\">\nfunction generatePath(bars) { \n  const h = 200; const addPath=(x,y)=>`L${Math.round(x*window.w/bars)},${y}`; \n  const path=Array.from({length:bars},(y,x)=>{y=h-(rir(2,5)*40); return addPath(x,y)+addPath(x+1,y)});\n  return (\"M0,\"+h+path.join('')+addPath(bars, h)+\"L0,\" + h + \"Z\").replace('undefined', '');\n}\nfunction updatePath(bars) {\n  const d = generatePath(6);\n  document.getElementById(\"tracer\").style.offsetPath = \"path('\"+d+\"')\"; \n  document.getElementById(\"footer_bg\").style.animation = \"none\"; //Glitchy animation fix\n  // set css var --path2 to --path1's computed value and update --path1 with new path(d)\n  const p = getComputedStyle(document.documentElement).getPropertyValue('--path1');\n  document.getElementById(\"footer_bg\").style.animation = \"clip-path-polygon 15s linear\";\n  document.documentElement.style.setProperty('--path2', p || \"path('\"+d+\"')\");\n  document.documentElement.style.setProperty('--path1', \"path('\"+d+\"')\");\n}\n\nwindow.w=Math.min(window.innerWidth, 800); \nupdatePath(); setInterval(updatePath,14900);\ndocument.addEventListener('scroll', function() {\n  let scrollPercent = (document.documentElement.scrollTop + document.body.scrollTop) / (document.documentElement.scrollHeight - document.documentElement.clientHeight) * 100;\n  scrollPercent = (scrollPercent / 100) * 45 + 10;\n  document.documentElement.style.setProperty('--change1', scrollPercent+'%' );\n  document.documentElement.style.setProperty('--change2', scrollPercent+'%' );\n  clearInterval(window.scrollTimer);\n  window.scrollTimer = setInterval(() => {\n    document.documentElement.style.setProperty('--change1', \"0%\");\n    document.documentElement.style.setProperty('--change2', \"100%\");\n  }, 1500); \n});\n</script>";

/***/ })

}]);