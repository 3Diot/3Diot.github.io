{"success": true, "parcel": {"id": 3420, "height": 7, "token": null, "name": null, "traffic_visits": 2470, "address": "112 Proton Tower", "visible": true, "geometry": {"type": "Polygon", "crs": {"type": "name", "properties": {"name": "EPSG:3857"}}, "coordinates": [[[6.48, -2.9], [6.48, -3.03], [6.6, -3.03], [6.6, -2.9], [6.48, -2.9]]]}, "area": 155.99999999999886, "streets": [null], "distance": 709.9323911472135, "x1": 648, "x2": 660, "y1": 0, "y2": 7, "z1": -303, "z2": -290, "suburb": "Proton", "is_common": false, "owner": "0xc8c4ab6e1e7dcc4e2957244baba86ed937dc0ee8", "owner_name": "NFTstudios", "contributors": ["0xb5af8e71e1c7d702b0be8cba90337a81817f7364 ", "0xdc9b3a05db94b951a81c8a23bf2cdb16009b716c", "0x5b38f44bc443e765d8cfc997f077d8a3185131fe", "0x47e8ce61990D3E3Bc6945FF08636DA6CCC34DEF9", "0x7df748C0587FfE7e30bB10D5E28d611D408591e4", "0x7df748C0587FfE7e30bB10D5E28d611D408591e4", "0x344E126b12B412fFD95adeA47AdB94d6Afa2b97a"], "label": null, "description": null, "sandbox": false, "lightmap_status": "None", "grid": false, "price": null, "content": {"scripting": false, "features": [{"type": "nft-model", "scale": [1, 1, 1], "url": "https://opensea.io/assets/0x30a2fa3c93fb9f93d1efeffd350c6a6bb62ba000/0", "position": [-1.25, 1.15, 4], "rotation": [0, 1.5707963267948966, 0], "version": "7.13.3", "uuid": "0c60b4f5-228e-4850-90b4-43de78130efe", "script": "", "animation": {"keyframes": []}, "id": "voxTest"}, {"type": "nft-model", "scale": [1, 1, 1], "url": "https://opensea.io/assets/0x30a2fa3c93fb9f93d1efeffd350c6a6bb62ba000/0", "position": [2.75, 0.75, 3.25], "rotation": [0, 1.5707963267948966, 0], "version": "5.16.3", "uuid": "eb674b0b-7239-4cd7-8a34-8731e2cececd", "script": ""}, {"type": "nft-model", "scale": [1, 1, 1], "url": "https://opensea.io/assets/0x30a2fa3c93fb9f93d1efeffd350c6a6bb62ba000/0", "position": [2.25, 0.75, 2], "rotation": [0, 1.5707963267948966, 0], "version": "5.16.4", "uuid": "85b8278a-d09a-401a-8339-542e4b46ba9e", "script": ""}, {"type": "nft-model", "scale": [1, 1, 1], "url": "https://opensea.io/assets/0xa58b5224e2fd94020cb2837231b2b0e4247301a6/3235", "position": [1.25, 0.75, 5.75], "rotation": [0, 1.5708, 0], "version": "8.12.1", "uuid": "040b979f-45f2-4391-94e2-7d5f35aa329c", "script": "", "animation": {"keyframes": []}}, {"type": "image", "scale": [1, 1, 0], "url": "https://va-cms-api.voxelarchitects.com/projects/43-via-daniele/image/0", "position": [-0.25, 3, -6.25], "rotation": [0, 3.14159, 0], "version": "8.15.2", "uuid": "7698ce1f-24ed-4149-ac2c-c55c8f1f8948", "animation": {"keyframes": []}, "script": "const numSecs=60 // number of seconds\n\nfeature.set({'url': `https://va-cms-api.voxelarchitects.com/projects/test-parcel/image/1?${Date.now()}`});\n\n\nparcel.on('playerenter',e=>{\n console.log(e.player.wallet);\n})", "blendMode": "Combine", "stretch": false, "transparent": false, "updateDaily": true, "uScale": "1", "vScale": "1"}, {"type": "image", "scale": [1, 1, 0], "url": "https://lh3.googleusercontent.com/MF3bw-mm6rNElLXvc0hn7RhSG4WjCuCq_V1uz-rsIFUH8NWIeqXAmQdZTg3SX2WKFeBqPL23jOThuHQwW7zbux8NHg", "position": [-3.75, 3.55, -6.25], "rotation": [0, 3.14, 0], "version": "8.2.7", "uuid": "4c11cfc0-6041-4881-b35c-3a7b652a37d1", "animation": {"keyframes": []}, "script": "", "id": "cmsImage01", "blendMode": "Combine", "stretch": false, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1, "link": "https://opensea.io/assets/0x4243a8413a77eb559c6f8eaffa63f46019056d08/7084"}, {"type": "image", "scale": [1, 1, 0], "url": "https://lh3.googleusercontent.com/W-BLzGV0OBe4CZlrthXURm5Z3V22BUxqGsKMl9BTxjs0Scur-xGxh_9OoSESb7Y9So43dCRJMyB5bRNwKRfWdJjZHDxvstimIDtj", "position": [-1.5, 3.25, -6.25], "rotation": [0, 3.14, 0], "version": "8.2.7", "uuid": "7e497c61-e192-490d-a7ae-06942a4485d4", "animation": {"keyframes": []}, "script": "", "id": "cmsImage02", "blendMode": "Combine", "stretch": false, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1, "link": "https://opensea.io/assets/0x11595ffb2d3612d810612e34bc1c2e6d6de55d26/1439"}, {"type": "button", "scale": [0.5, 0.5, 0.5], "text": "A", "position": [-3.75, 0.75, -0.25], "rotation": [0, -3.14, 0], "version": "8.1.9", "uuid": "386ce3ab-87f0-4cea-9c2f-e6807bbc52da", "script": "const cmsUrl =  \"https://va-cms-api.voxelarchitects.com/projects/pixelchain-christmas-cabin\";\nconst response = fetch(cmsUrl);\nlet cmsImages;\n\nconst features = parcel.getFeatures()\nconst cmsId = \"cmsImage\"\nlet images = [];\n\nfor (let i = 0; i < features.length; i++) {\n  if (features[i]._content.id != undefined && features[i]._content.id.includes(cmsId)) {\n      images.push(features[i])\n  }\n}\n\nresponse.then((value) => {\n  value.json().then((data) => {\n    cmsImages = data  \n    console.log(data.images)\n    \n    for (let i = 0; i < data.images.length && i < images.length; i++) {\n      images[i].set({'url' : data.images[i].src})\n      images[i].set({'link' : data.images[i].link})\n      images[i].set({'blendMode': 'Combine'})    \n    }    \n  })\n });\n", "id": "getAllImages"}, {"position": [0, 0.75, 0], "rotation": {"x": 0, "y": 0, "z": 0}, "scale": [1, 1, 1], "type": "nft-model", "uuid": "879ec187-1e32-4e28-93ba-bc9d977866be", "version": "7.13.3", "url": "https://opensea.io/assets/0x30a2fa3c93fb9f93d1efeffd350c6a6bb62ba000/0", "animation": {"keyframes": []}, "script": ""}, {"type": "nft-image", "scale": [1, 1, 0], "url": "", "position": [3.25, 2.75, -6.25], "rotation": [0, 3.141592653589793, 0], "version": "7.13.3", "uuid": "bceebabc-f46b-4930-b594-70c1484e3e36"}, {"type": "image", "scale": [1, 1, 0], "url": "https://media.discordapp.net/attachments/869240693850255390/874308259740258314/Captura_de_pantalla_2021-08-09_a_las_16.08.14.png?width=882&height=929", "position": [1.1, 3.15, -6.25], "rotation": [0, 3.141592653589793, 0], "version": "7.15.2", "uuid": "59e8f3df-f32a-4437-8bbf-1443da106aee", "animation": {"keyframes": []}, "script": "", "id": "", "blendMode": "Multiply", "stretch": false, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "button", "scale": [0.5, 0.5, 0.5], "text": "A", "position": [3.15, 2.55, -6.3], "rotation": [1.57, 0, 0], "version": "8.1.9", "uuid": "90d6e433-f228-4311-bd04-8983603d717f", "script": "feature.on('click', () => {\n  console.log(\"Script loaded\")\n})"}, {"position": [2.65, 1.17, 3.4], "rotation": [0, 0, 0], "scale": [1, 1, 1], "type": "vox-model", "uuid": "75d854f6-60c9-4376-bb44-0d40ba978701", "version": "7.15.3", "url": "https://cdn.discordapp.com/attachments/869240693850255390/874602368216485978/rug-0.vox", "animation": {"keyframes": []}, "script": "let Distance_to_player=1.5 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\nconst restOfTheVoxel = [parcel.getFeatureById('vox2'), parcel.getFeatureById('vox3'), parcel.getFeatureById('vox4')]\n\nconsole.log(restOfTheVoxel)\n//let restOfTheVox = parcel.getFeatureById('vox2');\n\nlet differenceX = [];\nlet differenceY = [];\nlet differenceZ = [];\n\nfor (let i = 0; i < restOfTheVoxel.length; i++) {\n    differenceX[i] = restOfTheVoxel[i].position.x - feature.position.x;\n    differenceY[i] = restOfTheVoxel[i].position.y - feature.position.y;\n    differenceZ[i] = restOfTheVoxel[i].position.z - feature.position.z;\n}\n\n//let differenceX = [restOfTheVoxel[0].position.x - feature.position.x, restOfTheVoxel[1].position.x - feature.position.x, restOfTheVoxel[2].position.x - feature.position.x]\n//let differenceY = [restOfTheVoxel[0].position.y - feature.position.y, restOfTheVoxel[1].position.y - feature.position.y, restOfTheVoxel[2].position.y - feature.position.y]\n//let differenceZ = [restOfTheVoxel[0].position.z - feature.position.z, restOfTheVoxel[1].position.z - feature.position.z, restOfTheVoxel[2].position.z - feature.position.z]\n\nlet dragging = false;\n\n//-------------- Do not touch -willie ---------------------------\n\nfunction moveObject(player){ \n    let playerRotation = player.rotation;\n\n    let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n    let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n    let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n    var positionRell = [\n        player.position.x - xDelta,\n        player.position.y - yDelta +(up_down_constant),\n        player.position.z - zDelta\n    ];\n\n    return positionRell\n}\n\nfunction setPosition(object,e){ // refreshes the positions\n    if (!dragging) {\n        return;\n    }\n    object.set({position:moveObject(e.player)})\n\n    for (let i = 0; i < restOfTheVoxel.length; i++) {\n        restOfTheVoxel[i].position.x = object.position.x+differenceX[i]\n        restOfTheVoxel[i].position.y = object.position.y+differenceY[i]\n        restOfTheVoxel[i].position.z = object.position.z+differenceZ[i]\n    }\n    if(!object.position || !object.rotation){\n        parcel.removeFeature(object)\n    }else{\n        setTimeout(()=>{\n        setPosition(object,e)\n    },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{\n    if (!dragging){\n        dragging = true;\n        let draggeableObject = parcel.getFeatureById(feature.id)\n        setPosition(draggeableObject,e)\n    } else {\n        dragging = false;\n    }\n})\n", "id": "vox1", "collidable": false}, {"type": "button", "scale": [0.5, 0.5, 0.5], "text": "A", "position": [-3.5, 0.75, -2.5], "rotation": [0, -2.36, 0], "version": "8.1.9", "uuid": "00fb3bb1-fa17-4b22-bc82-7e5f13202464", "script": "feature.on('click', () => {\n  console.log(parcel)\n})"}, {"type": "vox-model", "scale": [1, 1, 1], "url": "https://cdn.discordapp.com/attachments/869240693850255390/874602807817285652/rug-3.vox", "flipX": true, "position": [3.3, 1.17, 2.8], "rotation": [0, 0, 0], "version": "7.15.3", "uuid": "eee58025-67c6-40d9-90f5-ea14e9042889", "animation": {"keyframes": []}, "script": "", "id": "vox2"}, {"type": "vox-model", "scale": [1, 1, 1], "url": "https://cdn.discordapp.com/attachments/869240693850255390/874602807817285652/rug-3.vox", "flipX": true, "position": [2.8, 1.62, 3.34], "rotation": [0, 0, 0], "version": "7.15.3", "uuid": "95cf27d4-c1df-4e87-8928-e70b130e1ac2", "animation": {"keyframes": []}, "script": "", "id": "vox3"}, {"type": "vox-model", "scale": [1, 1, 1], "url": "https://cdn.discordapp.com/attachments/869240693850255390/874602807817285652/rug-3.vox", "flipX": true, "position": [1.77, 0.75, 3], "rotation": [0, 0, 0], "version": "7.15.3", "uuid": "f2850989-7be0-4467-a58e-4f39ec02c6ce", "animation": {"keyframes": []}, "script": "", "id": "vox4"}, {"type": "image", "scale": [1, 1, 0], "url": "https://lh3.googleusercontent.com/RFhpiuqAYrnszxADfkgRbHLvjhLsUyFk-RckAO00AOpQz6U77vM48P3zli5syVekeargsAHKpcCZxX5cdpcPKWjbjQC6x8HE9Ub_", "position": [-1.5, 2.25, -6.25], "rotation": [0, 3.14, 0], "version": "8.2.7", "uuid": "af6ca50c-612e-4a74-a321-22ab3dbc6d3f", "animation": {"keyframes": []}, "script": "", "id": "cmsImage03", "blendMode": "Combine", "stretch": false, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1, "link": "https://opensea.io/assets/0xe2a52a5f91a83846706fa7a4f036fe8c6723eaf8/2950"}, {"type": "image", "scale": [1, 1, 0], "url": "https://media.discordapp.net/attachments/869240693850255390/874308259740258314/Captura_de_pantalla_2021-08-09_a_las_16.08.14.png?width=882&height=929", "position": [-2.5, 2.25, -6.25], "rotation": [0, 3.14, 0], "version": "8.3.2", "uuid": "9b33a740-f981-4859-a913-f084931a41c6", "animation": {"keyframes": []}, "script": "", "id": "cmsImage0", "blendMode": "Combine", "stretch": false, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1, "link": "https://storage.googleapis.com/whitepaper/CMS/placeholders/4.png"}, {"type": "slider-input", "scale": [1, 0.25, 0], "position": [1.75, 0.75, 6.25], "rotation": [0, 0, 0], "version": "7.18.12", "uuid": "997f0083-3660-4d5e-bfc3-c327e36c48bc"}, {"type": "button", "scale": [0.5, 0.5, 0.5], "text": "A", "position": [-3.25, 0.75, 2.25], "rotation": [0, -1.5708, 0], "version": "8.12.11", "uuid": "d3c8f117-15fe-4b7f-84e0-562cf3714dd0", "script": "feature.on('click',e=>{\n    e.player.teleportTo('N@653E,298S,0U')\n})"}, {"type": "button", "scale": [0.5, 0.5, 0.5], "text": "A", "position": [-1.25, 1.55, 1], "rotation": [0, -1.5708, 0], "version": "8.12.1", "uuid": "50028f84-70ca-4d15-8fae-bdcaed7bf676", "script": "// Create GUI\nlet gui  = feature.createBasicGui()\nfeature.on('click',e=>{\n    if(gui.showing){\n    // if GUI is showing, hide it. (act like a toggle)\n    gui.destroy()\n    return\n  }\n\n  // Add our first control:\n  let textControl =gui.addText('Hello!')\n\n    // Add a button under it\n  let leftButton = gui.addButton('left',null,[1,0])\n      // Add a button under it\n  let rightButton = gui.addButton('Event 1',null,[1,1])\n\n  // Call the GUI to show.\n  gui.show()\n\n  rightButton.on('click',e=>{\n    // On right button is clicked\n    textControl.text = 'right is clicked'\n    // Call update to update the control\n    textControl.update()\n  })\n    leftButton.on('click',e=>{\n      // On left button is clicked\n    textControl.text = 'left is clicked'\n      // Call update to update the control\n     textControl.update()\n  })\n})"}, {"type": "button", "scale": [0.5, 0.5, 0.5], "text": "A", "position": [-3, 0.75, -4.75], "rotation": [0, -2.36, 0], "version": "8.1.9", "uuid": "3a8ca0c3-67c3-4882-8945-6429eaf540af", "script": "feature.on('click', (e)=> {\n    console.log(e.player) // Player object\n  console.log(e.point) // Vector3 of click in parcel space\n  console.log(e.normal) // Vector3 of normal at face where clicked\n})"}, {"type": "cube", "scale": [0, 0, 0], "url": "", "position": [0.75, 1.55, 1.75], "rotation": [0, -0.79, 0], "version": "8.1.9", "uuid": "37f00d4e-d435-478a-88e6-56562da68bc0", "color": "#ffffff", "collidable": true}, {"type": "cube", "scale": [0.5, 0.5, 0.5], "url": "", "position": [3.5, 1.1, 1.75], "rotation": [0, 0, 0], "version": "8.6.2", "uuid": "0b861328-e462-4553-9bff-46969bdc6d26", "script": "// Create GUI\nlet gui  = feature.createBasicGui()\nfeature.on('click',e=>{\n    if(gui.showing){\n    // if GUI is showing, hide it. (act like a toggle)\n    gui.destroy()\n    return\n  }\n\n  // Add our first control:\n  gui.addText('Hello!')\n\n  // Call the GUI to show.\n  gui.show()\n\n})", "color": "#-1000", "visible": false, "id": "cubeTest"}, {"type": "vid-screen", "scale": [1, 1, 0], "position": [-0.75, 1.65, -3.75], "rotation": [0, 0, 0], "version": "8.1.9", "uuid": "a9adc71f-c3b4-40d1-8ab1-92492448b39d", "script": "feature.on('keys', e => {\n  let test = parcel.getFeatureById(\"cubeTest\")\n    if (e.keys.left) {\n        console.log(test)\n    test.position.x -= 0.1  \n    } else if (e.keys.right) {\n        console.log(\"lele\")\n    }\n})"}, {"type": "image", "scale": [1, 1, 0], "url": "https://lh3.googleusercontent.com/RFhpiuqAYrnszxADfkgRbHLvjhLsUyFk-RckAO00AOpQz6U77vM48P3zli5syVekeargsAHKpcCZxX5cdpcPKWjbjQC6x8HE9Ub_", "position": [1, 2, -6.25], "rotation": [0, 3.14, 0], "version": "8.4.0", "uuid": "cd84d8fb-dbae-4dea-b2fc-274266bd0c4c", "animation": {"keyframes": []}, "script": "", "id": "cmsImage03", "blendMode": "Combine", "stretch": false, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1, "link": "https://opensea.io/assets/0xe2a52a5f91a83846706fa7a4f036fe8c6723eaf8/2950"}, {"type": "image", "scale": [1.3, 1.1, 0], "url": "https://va-cms-api.voxelarchitects.com/projects/test-parcel/image/1", "position": [-0.75, 2.75, 6.75], "rotation": [0, 0, 0], "version": "8.9.6", "uuid": "bfcbf612-f87d-4b54-8087-9514d11c8992", "blendMode": "Combine", "animation": {"destination": null, "keyframes": []}, "stretch": false, "transparent": false, "opacity": "1.00", "updateDaily": true, "uScale": 1, "vScale": 1, "script": "feature.set({'stretched': true})"}, {"type": "image", "scale": [1, 1, 0], "url": "https://va-cms-api.voxelarchitects.com/projects/test-parcel/image/3", "position": [0.5, 2.75, 6.75], "rotation": [0, 0, 0], "version": "8.4.0", "uuid": "34f54aed-76ea-459c-b579-585f29b9935e", "blendMode": "Combine", "animation": {"destination": null, "keyframes": []}, "stretch": false, "transparent": false, "opacity": "1.00", "updateDaily": true, "uScale": 1, "vScale": 1}, {"type": "vid-screen", "scale": [1, 1, 0], "position": [2, 2.1, 4.75], "rotation": [0, 0, 0], "version": "8.15.2", "uuid": "94afaedf-90a5-4683-9208-baa3cc5cb9f3", "script": "// CREATE AN IMAGE WITH FEATURE ID \"link\" FOR THIS TO WORK, TICK STRETCH AND BLEND MODE: COMBINE\nlet canvas = undefined;\nlet title = undefined;\nlet link = parcel.getFeatureById(\"link\");\nlet linkButton = undefined;\nlet closeButton = undefined;\nlet slider = undefined;\nlet sliderBar = undefined;\nlet posX = feature.position.x;\nlet posY = feature.position.y;\nlet posZ = feature.position.z;\nlet xScale = 3;\nlet yScale = 2;\nlet rotation = [0, 1.57, 0];\n\nlet titleString = undefined;\nlet bodyString = [\"\"];\nlet linkString = undefined;\nlet bodyText = [];\nlet splitString = [];\nlet textLength = 47;\nlet numberOfLines = 8;\nlet currentPositionText = 0;\nlet dragging = false;\nlet sliderBarMaxY =  posY + yScale * 0.18;\nlet sliderBarMinY = posY - yScale * 0.13;\nlet lastPositionText = 0;\n\nconst cmsUrl = \"https://va-cms-api.voxelarchitects.com/projects/43-via-daniele-manin\";\nconst response = fetch(cmsUrl);\n\n\nresponse.then((value) => {\n    value.json().then((data) => {\n        titleString = data.messages[0].title;\n        bodyString = data.messages[0].body;\n        linkString = data.messages[0].link;\n        bodyString = bodyString.match(/.{1,85}(\\s|$)/g);\n    })\n})\nfeature.on('start', (event) => {\n    if (canvas == undefined) {\n        canvas = parcel.createFeature('image')\n        canvas.set({scale:[xScale,yScale,1]})\n        canvas.set({position:[posX,posY ,posZ]})\n        canvas.set({rotation :rotation})\n        canvas.set({'url' : \"https://media.discordapp.net/attachments/869240693850255390/897087748522016768/UI_Window.png?width=1458&height=972\"})\n        canvas.set({'stretched': true})\n        canvas.set({'blendMode': 'Combine'})  \n\n        closeButton = parcel.createFeature('image')\n        closeButton.set({scale:[0.1,0.1,1]})\n        closeButton.set({position:[posX - 0.02,posY + yScale * 0.4,posZ - xScale * 0.395]})\n        closeButton.set({rotation :rotation})\n        closeButton.set({'url' : \"https://media.discordapp.net/attachments/869240693850255390/897087895473627166/UI_Close.png\"})\n        closeButton.set({'blendMode': 'Multiply'})  \n\n        closeButton.on('click', e => {\n            dragging = false;\n            canvas.position.y = -1;\n            closeButton.position.y = -1;\n            title.position.y = -1;\n            for (let i = 0; i < bodyText.length; i++) {\n                bodyText[i].position.y = -1;\n            }\n            link.position.y = -1;\n            slider.position.y = -1;\n            sliderBar.position.y = sliderBar.position.y * -1;\n            linkButton.position.y = -1;\n        })\n\n\n        title = parcel.createFeature('richtext');\n        title.set({scale:[xScale,yScale,1]})\n        title.set({position:[posX - 0.02,posY - posY * 0.1 ,posZ  - 0.2]})\n        title.set({rotation : rotation})\n        for (let i = 0; i < numberOfLines; i++) {\n            bodyText[i] = parcel.createFeature('richtext');\n            bodyText[i].set({scale:[xScale * 0.8,yScale * 0.8 ,1]})\n            bodyText[i].set({position:[posX- 0.02,posY - 0.15 - (0.12 * (i + 1)), posZ + 0.10]})\n            bodyText[i].set({rotation :rotation})\n            bodyText[i].set({'text': bodyString[i]})\n        }\n\n        link.set({scale:[0.88,0.2,1]})\n        link.set({position:[posX - 0.02,posY - yScale / 3 ,posZ - xScale * 0.27]})\n        link.set({rotation :rotation})\n        link.set({'url' : \"https://media.discordapp.net/attachments/869240693850255390/897162008380702761/UI_Button_Text_Vector.png\"})\n\n\n        linkButton = parcel.createFeature('sign')\n        linkButton.set({scale:[0.88,0.2,1]})\n        linkButton.set({position:[posX - 0.03,posY - yScale / 3 ,posZ - xScale * 0.27]})\n        linkButton.set({rotation :rotation})\n        linkButton.set({'text':\"            \"})\n        linkButton.set({'link': linkString})\n\n        title.set({'text':\"#\" + titleString})\n\n        slider = parcel.createFeature('image');\n        slider.set({scale:[0.08, 0.9, 1]})\n        slider.set({position:[posX - 0.02, posY + 0.04, posZ - xScale * 0.4]})\n        slider.set({rotation: rotation})\n        slider.set({'url' : \"https://media.discordapp.net/attachments/869240693850255390/897120136270606346/UI_Sidebar.png\"})\n        slider.set({'blendMode': 'Combine'})\n        slider.on('click',e=>{\n            if (!dragging){\n                dragging = true;\n                setPosition(sliderBar,e)\n            } else {\n                dragging = false;\n            }\n        })\n\n        sliderBar = parcel.createFeature('image');\n        sliderBar.set({scale:[0.08, 0.3, 1]})\n        sliderBar.set({position:[posX - 0.025, sliderBarMaxY, posZ - xScale * 0.4]})\n        sliderBar.set({rotation :rotation})\n        sliderBar.set({'url' : \"https://media.discordapp.net/attachments/869240693850255390/897120129035403274/UI_Scroll.png\"})\n        sliderBar.set({'blendMode': 'Combine'})\n        sliderBar.on('click',e=>{\n            if (!dragging){\n                dragging = true;\n                setPosition(sliderBar,e)\n            } else {\n                dragging = false;\n            }\n        })\n\n    } else {\n        canvas.position.y = posY;\n        closeButton.position.y = posY + yScale * 0.4;\n        title.position.y = posY - posY * 0.1;        \n        for (let i = 0; i < numberOfLines; i++) {\n            bodyText[i].position.y = posY - 0.15 - (0.12 * (i + 1))\n        }\n        link.position.y = posY - yScale / 3;\n        linkButton.position.y = posY - yScale / 3;\n        slider.position.y = posY + 0.04;\n        sliderBar.position.y = sliderBar.position.y * -1;\n    }\n})\n\n\nlet Distance_to_player=1.5 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 200       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\n\n  function setPosition(object,e){ // refreshes the positions\n    if (!dragging) {\n        return;\n    }\n    let coordinate = getNextCoordinates(e.player);\n    object.position.y = coordinate;\n    currentPositionText = getTextPosition(coordinate);\n    currentPositionText = bodyString.length * currentPositionText / 100;\n    if(!object.position || !object.rotation){\n        parcel.removeFeature(object)\n    }else{\n        setTimeout(()=>{\n        setPosition(object,e)\n    },refresh_rate)\n  }\n}\nsetInterval(() => {\n    if (dragging) {\n        if (lastPositionText != currentPositionText) {\n            lastPositionText = currentPositionText;\n            for (let i = 0; i < bodyText.length; i++) {\n                \n                let currentText = bodyString[i + Math.floor(currentPositionText)]\n                if (currentText == undefined) {\n                    currentText = \"\";\n                }\n                bodyText[i].set({'text': currentText})\n            }\n        }\n    }\n}, 600)\nfunction getNextCoordinates(player){ \n    let playerRotation = player.rotation;\n    let returnValue = 0;\n    let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n    \n    returnValue = player.position.y - yDelta +(up_down_constant)\n    if (returnValue > sliderBarMaxY) {\n        returnValue = sliderBarMaxY;\n    }\n\n    if (returnValue < sliderBarMinY) {\n        returnValue = sliderBarMinY;\n    }\n    \n    return returnValue;\n}\n\nfunction getTextPosition(coordinate) {\n    maxDistance = sliderBarMaxY - sliderBarMinY;\n    let percentage = (sliderBarMaxY - coordinate) * 100 / (maxDistance);\n    \n    return percentage;\n}\n"}, {"type": "vid-screen", "scale": [1, 1, 0], "position": [-2.25, 1.75, 6.25], "rotation": [0, 0, 0], "version": "14854", "uuid": "4063aed6-4521-497e-93fd-46164c29ced8", "script": "let left = false;\nlet right = false;\nlet up = false;\nlet down = false;\nlet speed = 0.01\n  let test = parcel.getFeatureById(\"screenUsageTest\")\nfeature.on('frame', (event) => {\n  if (right) {\n  test.position.x += speed\n    }    \n  if (left) {\n  test.position.x -= speed\n    }  \n  if (up) {\n  test.position.z += speed\n    }    \n  if (down) {\n  test.position.z -= speed\n    }  \n})\n\nfeature.on('keys', e => {\n    if (e.keys.left) {\n       left = true;\n    } else {\n    left = false;\n    }\n    if (e.keys.right) {\n       right = true;\n    } else {\n    right = false;\n    }\n    if (e.keys.up) {\n       up = true;\n    } else {\n    up = false;\n    }\n    if (e.keys.down) {\n       down = true;\n    } else {\n    down = false;\n    }\n  \n  if (e.keys.a) {\n    test.position.y += 0.01        \n  }\n  if (e.keys.s) {\n    test.position.y -= 0.01        \n  }\n}\n)\n"}, {"type": "cube", "scale": [0.5, 1, 0.5], "url": "", "position": [-1.61, 1.87, 4.18], "rotation": [0, 0, 0], "version": "14854", "uuid": "08adac1d-b98f-43fc-bda5-427ca81a4188", "script": "let gui  = feature.createBasicGui()\nfeature.on('click',e=>{\n    if(gui.showing){\n    // if GUI is showing, hide it. (act like a toggle)\n    gui.destroy()\n    return\n  }\n\n  // Add our first control:\n  let textControl =gui.addText('Hello!')\n\n    // Add a button under it\n  let leftButton = gui.addButton('left',[1,0])\n      // Add a button under it\n  let rightButton = gui.addButton('right',[1,1])\n\n  // Call the GUI to show.\n  gui.show()\n\n  rightButton.on('click',e=>{\n    // On right button is clicked\n    textControl.text = 'right is clicked'\n    // Call update to update the control\n    textControl.update()\n  })\n    leftButton.on('click',e=>{\n      // On left button is clicked\n    textControl.text = 'left is clicked'\n      // Call update to update the control\n     textControl.update()\n  })\n})", "id": "screenUsageTest", "animation": {"destination": null, "keyframes": []}, "color": "#ffffff", "collidable": true}, {"type": "sign", "scale": [0.5, 0.5, 0], "text": "", "position": [-1, 1, 2.5], "rotation": [0, -1.57, 0], "version": "8.9.6", "uuid": "fec988fb-f71d-49b7-afd8-b92a0f1bc503", "animation": {"destination": null, "keyframes": []}, "link": "https://google.com", "color": "#000000", "background": "#ffffff"}, {"type": "slider-input", "scale": [1, 0.25, 0], "position": [-1, 2.2, 1.75], "rotation": [0, 0, 0], "version": "8.9.6", "uuid": "c3c82b0a-871f-47bd-8c7a-5060d299b55c", "script": "console.log(\"VALUE: \" + feature.get('value'))"}, {"type": "image", "scale": [1, 1, 0], "url": "", "position": [-2.5, 1.25, 4], "rotation": [0, 0, 0], "version": "8.13.1", "uuid": "dc6048d4-89d2-47e3-bed8-fc0ce8fe269e", "animation": {"destination": null, "keyframes": []}, "id": "link", "blendMode": "Combine", "stretch": true, "transparent": false, "opacity": "1.00", "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "button", "scale": [0.5, 0.5, 0.5], "text": "A", "position": [-2.75, 0.75, 2.5], "rotation": [0, -1.5708, 0], "version": "8.12.11", "uuid": "ededd8b9-824b-48e6-b3b4-566e3b779540", "script": "feature.on('click',e=>{\n    e.player.teleportTo('S@651E,294S,0U')\n  e.player.animate('Sitting')\n})"}, {"type": "cube", "scale": [0.5, 0.5, 0.5], "url": "", "position": [-3, 1.0000000476837159, 2.75], "rotation": [0, 0, 0], "version": "8.12.11", "uuid": "38ce3e07-6288-4e86-9705-4bc1459bcd92", "animation": {"destination": null, "keyframes": []}}, {"type": "vid-screen", "scale": [1, 1, 0], "position": [4.75, 1.25, -4], "rotation": [0, -3.92699, 0], "version": "8.15.1", "uuid": "df1042fb-d135-42e8-9a2d-7e927be6580b", "script": "// CREATE AN IMAGE WITH FEATURE ID \"link\" FOR THIS TO WORK\nlet canvas = undefined;\nlet title = undefined;\nlet link = parcel.getFeatureById(\"link\");\nlet linkButton = undefined;\nlet closeButton = undefined;\nlet slider = undefined;\nlet sliderBar = undefined;\nlet posX = feature.position.x;\nlet posY = feature.position.y;\nlet posZ = feature.position.z;\nlet xScale = 3;\nlet yScale = 2;\nlet rotation = [0, 1.57, 0];\n\nlet titleString = undefined;\nlet bodyString = [\"\"];\nlet linkString = undefined;\nlet bodyText = [];\nlet splitString = [];\nlet textLength = 47;\nlet numberOfLines = 8;\nlet currentPositionText = 0;\nlet dragging = false;\nlet sliderBarMaxY =  posY + yScale * 0.18;\nlet sliderBarMinY = posY - yScale * 0.13;\nlet lastPositionText = 0;\n\nconst cmsUrl = \"https://va-cms-api.voxelarchitects.com/projects/43-via-daniele-manin\";\nconst response = fetch(cmsUrl);\n\n\nresponse.then((value) => {\n    value.json().then((data) => {\n        titleString = data.messages[0].title;\n        bodyString = data.messages[0].body;\n        linkString = data.messages[0].link;\n        bodyString = bodyString.match(/.{1,85}(\\s|$)/g);\n    })\n})\nfeature.on('start', (event) => {\n    if (canvas == undefined) {\n        canvas = parcel.createFeature('image')\n        canvas.set({scale:[xScale,yScale,1]})\n        canvas.set({position:[posX,posY ,posZ]})\n        canvas.set({rotation :rotation})\n        canvas.set({'url' : \"https://media.discordapp.net/attachments/869240693850255390/897087748522016768/UI_Window.png?width=1458&height=972\"})\n        canvas.set({'stretched': true})\n        canvas.set({'blendMode': 'Combine'})  \n\n        closeButton = parcel.createFeature('image')\n        closeButton.set({scale:[0.1,0.1,1]})\n        closeButton.set({position:[posX - 0.02,posY + yScale * 0.4,posZ - xScale * 0.395]})\n        closeButton.set({rotation :rotation})\n        closeButton.set({'url' : \"https://media.discordapp.net/attachments/869240693850255390/897087895473627166/UI_Close.png\"})\n        closeButton.set({'blendMode': 'Multiply'})  \n\n        closeButton.on('click', e => {\n            dragging = false;\n            canvas.position.y = -1;\n            closeButton.position.y = -1;\n            title.position.y = -1;\n            for (let i = 0; i < bodyText.length; i++) {\n                bodyText[i].position.y = -1;\n            }\n            link.position.y = -1;\n            slider.position.y = -1;\n            sliderBar.position.y = sliderBar.position.y * -1;\n            linkButton.position.y = -1;\n        })\n\n\n        title = parcel.createFeature('richtext');\n        title.set({scale:[xScale,yScale,1]})\n        title.set({position:[posX - 0.02,posY - posY * 0.1 ,posZ  - 0.2]})\n        title.set({rotation : rotation})\n        for (let i = 0; i < numberOfLines; i++) {\n            bodyText[i] = parcel.createFeature('richtext');\n            bodyText[i].set({scale:[xScale * 0.8,yScale * 0.8 ,1]})\n            bodyText[i].set({position:[posX- 0.02,posY - 0.15 - (0.12 * (i + 1)), posZ + 0.10]})\n            bodyText[i].set({rotation :rotation})\n            bodyText[i].set({'text': bodyString[i]})\n        }\n\n        link.set({scale:[0.88,0.2,1]})\n        link.set({position:[posX - 0.02,posY - yScale / 3 ,posZ - xScale * 0.27]})\n        link.set({rotation :rotation})\n        link.set({'url' : \"https://media.discordapp.net/attachments/869240693850255390/897162008380702761/UI_Button_Text_Vector.png\"})\n\n\n        linkButton = parcel.createFeature('sign')\n        linkButton.set({scale:[0.88,0.2,1]})\n        linkButton.set({position:[posX - 0.03,posY - yScale / 3 ,posZ - xScale * 0.27]})\n        linkButton.set({rotation :rotation})\n        linkButton.set({'text':\"            \"})\n        linkButton.set({'link': linkString})\n\n        title.set({'text':\"#\" + titleString})\n\n        slider = parcel.createFeature('image');\n        slider.set({scale:[0.08, 0.9, 1]})\n        slider.set({position:[posX - 0.02, posY + 0.04, posZ - xScale * 0.4]})\n        slider.set({rotation: rotation})\n        slider.set({'url' : \"https://media.discordapp.net/attachments/869240693850255390/897120136270606346/UI_Sidebar.png\"})\n        slider.set({'blendMode': 'Combine'})\n        slider.on('click',e=>{\n            if (!dragging){\n                dragging = true;\n                setPosition(sliderBar,e)\n            } else {\n                dragging = false;\n            }\n        })\n\n        sliderBar = parcel.createFeature('image');\n        sliderBar.set({scale:[0.08, 0.3, 1]})\n        sliderBar.set({position:[posX - 0.025, sliderBarMaxY, posZ - xScale * 0.4]})\n        sliderBar.set({rotation :rotation})\n        sliderBar.set({'url' : \"https://media.discordapp.net/attachments/869240693850255390/897120129035403274/UI_Scroll.png\"})\n        sliderBar.set({'blendMode': 'Combine'})\n        sliderBar.on('click',e=>{\n            if (!dragging){\n                dragging = true;\n                setPosition(sliderBar,e)\n            } else {\n                dragging = false;\n            }\n        })\n\n    } else {\n        canvas.position.y = posY;\n        closeButton.position.y = posY + yScale * 0.4;\n        title.position.y = posY - posY * 0.1;        \n        for (let i = 0; i < numberOfLines; i++) {\n            bodyText[i].position.y = posY - 0.15 - (0.12 * (i + 1))\n        }\n        link.position.y = posY - yScale / 3;\n        linkButton.position.y = posY - yScale / 3;\n        slider.position.y = posY + 0.04;\n        sliderBar.position.y = sliderBar.position.y * -1;\n    }\n})\n\n\nlet Distance_to_player=1.5 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 200       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\n\n  function setPosition(object,e){ // refreshes the positions\n    if (!dragging) {\n        return;\n    }\n    let coordinate = getNextCoordinates(e.player);\n    object.position.y = coordinate;\n    currentPositionText = getTextPosition(coordinate);\n    currentPositionText = bodyString.length * currentPositionText / 100;\n    if(!object.position || !object.rotation){\n        parcel.removeFeature(object)\n    }else{\n        setTimeout(()=>{\n        setPosition(object,e)\n    },refresh_rate)\n  }\n}\nsetInterval(() => {\n    if (dragging) {\n        if (lastPositionText != currentPositionText) {\n            lastPositionText = currentPositionText;\n            for (let i = 0; i < bodyText.length; i++) {\n                \n                let currentText = bodyString[i + Math.floor(currentPositionText)]\n                if (currentText == undefined) {\n                    currentText = \"\";\n                }\n                bodyText[i].set({'text': currentText})\n            }\n        }\n    }\n}, 600)\nfunction getNextCoordinates(player){ \n    let playerRotation = player.rotation;\n    let returnValue = 0;\n    let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n    \n    returnValue = player.position.y - yDelta +(up_down_constant)\n    if (returnValue > sliderBarMaxY) {\n        returnValue = sliderBarMaxY;\n    }\n\n    if (returnValue < sliderBarMinY) {\n        returnValue = sliderBarMinY;\n    }\n    \n    return returnValue;\n}\n\nfunction getTextPosition(coordinate) {\n    maxDistance = sliderBarMaxY - sliderBarMinY;\n    let percentage = (sliderBarMaxY - coordinate) * 100 / (maxDistance);\n    \n    return percentage;\n}\n"}, {"type": "image", "scale": [1, 1, 0], "url": "", "position": [-0.25, 1.25, 2.75], "rotation": [0, 0, 0], "version": "8.15.1", "uuid": "673ad3d3-b82e-499f-8ad3-1b22bc75a74e", "animation": {"destination": null, "keyframes": []}, "id": "link2", "blendMode": "Combine"}], "voxels": "eJzt1DEKgDAQAEH9uU+3EHsjROIyc/UVB5vsx77wbIPsNHdWnvF7RjdoWvstzL+GJl1TpGuKdE2RrinSNUW6pkjXFJW6fvMSaCp17b/m9oeunxeuay5/6HrmNTTpmiJdU6RrinRNka4p0jVFuqZI1xTpmqK1u/7mLdgp7ozPCXsy62o="}, "island": "Proton", "kind": "unit"}}