{"success": true, "parcel": {"id": 5636, "height": 9, "token": null, "name": "pizza plaza", "traffic_visits": null, "address": "7 The Village Way", "visible": true, "geometry": {"type": "Polygon", "crs": {"type": "name", "properties": {"name": "EPSG:3857"}}, "coordinates": [[[8.340100005, -0.81], [8.42, -0.81], [8.42, -0.94], [8.340100005, -0.94], [8.340100005, -0.81]]]}, "area": 103.8699935662942, "streets": [{"name": "The Village Way", "geometry": {"type": "LineString", "coordinates": [[8.44, -1.1], [8.44, -0.63]]}, "visible": true, "kind": null, "island": "Miami", "id": 2421}, {"name": "Ralph Renick Way", "geometry": {"type": "LineString", "coordinates": [[8.12, -0.96], [8.44, -0.96]]}, "visible": true, "kind": null, "island": "Miami", "id": 2454}, {"name": "Raven Ave", "geometry": {"type": "LineString", "coordinates": [[8.44, -0.85], [8.76, -0.85]]}, "visible": true, "kind": null, "island": "Miami", "id": 2455}, {"name": "Perimeter Rd", "geometry": {"type": "LineString", "coordinates": [[8.12, -0.79], [8.44, -0.79]]}, "visible": true, "kind": null, "island": "Miami", "id": 2456}], "distance": 837.9341745778745, "x1": 834, "x2": 842, "y1": 0, "y2": 9, "z1": -94, "z2": -81, "suburb": "Miami", "is_common": false, "owner": "0xe92dedd00454bee1117c06036769943fbe60b5e7", "owner_name": null, "contributors": ["0x4198d4aA9D9F87c9edF6f64202436CD95A4D1856"], "label": "food", "description": "metaverse navigation station, easy exploration.\nIn pizza plaza, you can easily find tourist destinations, so you don\u2019t need to waste most of your time looking for attractions!", "sandbox": false, "lightmap_status": "None", "grid": false, "price": null, "content": {"features": [{"type": "image", "scale": [8, 8, 0], "url": "https://media-crvox.sfo2.digitaloceanspaces.com/0xE92dEDd00454beE1117C06036769943FBE60B5e7/1631602035166-87977550-8534-476e-a45e-1064f0ce3b7a.png", "position": [-3.2, 4.75, 0.5], "rotation": [0, 4.71239, 0], "version": "16168", "uuid": "9af0d935-40a2-4bc0-a87a-a393a80af849", "animation": {"destination": null, "keyframes": []}, "stretch": false, "transparent": false, "opacity": "1.00", "updateDaily": false, "uScale": 1, "vScale": 1, "id": "pizza1", "script": "var activewallet = ''\nparcel.on('playerenter', (e) => {\n    if (activewallet === '') {\n\n        fetch('https://btcnft.pizza/cv/nftinfo', {\n            method: 'POST',\n            mode: 'cors',\n        }).then((r) => {\n            return r.json();\n        }).then((ads) => {\n\n\n            if (ads.length > 0) {\n                var ads2 = []\n                var ads3 = []\n                var ads4 = []\n                for (let i = 0; i < ads.length; i++) {\n                    if (ads[i].z == 1) {\n                        setAdz1(ads[i])\n                    } else if (ads[i].z == 2) {\n                        ads2.push(ads[i])\n                    } else if (ads[i].z == 3) {\n                        ads3.push(ads[i])\n                    } else {\n                        ads4.push(ads[i])\n                    }\n                }\n                if (ads2.length > 0) { setAdz2(ads2) }\n                if (ads3.length > 0) { setAdz3(ads3) }\n                if (ads4.length > 0) { setAdz4(ads4) }\n            }\n\n\n        });\n\n    }\n})\n\nparcel.on('playerleave', (e) => {\n    activewallet = e.player.wallet\n})\n\nfunction setAdz1(ad) {\n    let pizza = parcel.getFeatureById('pizza1');\n    var gridPosx = pizza.position.x;\n    var gridPosy = pizza.position.y + 2;\n    var gridPosz = pizza.position.z - 5.5;\n    var gridRotax = pizza.rotation.x;\n    var gridRotay = pizza.rotation.y;\n    var gridRotaz = pizza.rotation.z;\n    var aposx = gridPosx + 0.1;\n    var aposy = gridPosy - ad.y * 0.04;\n    var aposz = gridPosz + ad.x * 0.1;\n    var aid = 'btcnft' + ad.idx;\n    var cid = 'nftback' + ad.idx;\n    var aw = ad.width * 0.2;\n    var ah = ad.height * 0.2;\n    var b = parcel.getFeatureById(aid)\n    if (b) {\n        var c = parcel.getFeatureById(cid)\n        if (!c) {\n            c = parcel.createFeature('cube');\n            c.set({ scale: [aw, ah, 0] });\n            c.set({ id: cid });\n        }\n        c.set({ position: [aposx - 0.01, aposy, aposz] });\n        c.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n        b.set({ position: [aposx, aposy, aposz] });\n        b.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n        b.set({ stretch: true });\n        if (b.get('url') !== ad.image) {\n            b.set({ url: ad.image })\n        }\n        b.set({ link: ad.link })\n    } else {\n        let c = parcel.createFeature('cube');\n        c.set({ scale: [aw, ah, 0] });\n        c.set({ position: [aposx - 0.01, aposy, aposz] });\n        c.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n        c.set({ id: cid });\n        let a = parcel.createFeature('image');\n        a.set({ scale: [aw, ah, 0] });\n        a.set({ position: [aposx, aposy, aposz] });\n        a.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n        a.set({ stretch: true });\n        a.set({ url: ad.image, link: ad.link });\n        a.set({ id: aid });\n    }\n}\n\nfunction setAdz2(ad2) {\n    let cube2 = parcel.getFeatureById('cube2');\n    var ads2List = { PosxTop: 0 - 3, PosyTop: 6, MaxWidth: 0 }\n    var maxPosyEnd = 1;\n    var gridPosz = 0 - 6.1;\n    var gridRotax = 0;\n    var gridRotay = cube2.rotation.y;\n    var gridRotaz = 0;\n    for (let ai = 0; ai < ad2.length; ai++) {\n        var aw = ad2[ai].width * 0.2;\n        var ah = ad2[ai].height * 0.2;\n        var aposz = gridPosz;\n        var aid = 'btcnft' + ad2[ai].idx;\n        var cid = 'nftback' + ad2[ai].idx;\n        if (ads2List.PosyTop - ah >= maxPosyEnd) {\n            var aposx = ads2List.PosxTop + aw / 2;\n            var aposy = ads2List.PosyTop - ah / 2;\n            ads2List.PosyTop = ads2List.PosyTop - ah;\n            if (aw > ads2List.MaxWidth) { ads2List.MaxWidth = aw; }\n        } else {\n            let oldMaxW = ads2List.MaxWidth;\n            ads2List = { PosxTop: 0 - 3 + oldMaxW, PosyTop: 6, MaxWidth: 0 }\n            var aposx = ads2List.PosxTop + aw / 2;\n            var aposy = ads2List.PosyTop - ah / 2;\n            ads2List.PosyTop = ads2List.PosyTop - ah;\n            if (aw > ads2List.MaxWidth) { ads2List.MaxWidth = aw; }\n        }\n        var b = parcel.getFeatureById(aid);\n        if (b) {\n            var c = parcel.getFeatureById(cid)\n            if (!c) {\n                c = parcel.createFeature('cube');\n                c.set({ scale: [aw, ah, 0] });\n                c.set({ id: cid });\n\n            }\n            c.set({ position: [aposx, aposy, aposz - 0.01] });\n            c.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n            b.set({ position: [aposx, aposy, aposz] });\n            b.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n            b.set({ stretch: true });\n            if (b.get('url') !== ad2[ai].image) {\n                b.set({ url: ad2[ai].image })\n            }\n            b.set({ link: ad2[ai].link })\n\n        } else {\n            let c = parcel.createFeature('cube');\n            c.set({ scale: [aw, ah, 0] });\n            c.set({ position: [aposx, aposy, aposz - 0.01] });\n            c.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n            c.set({ id: cid });\n            let a = parcel.createFeature('image');\n            a.set({ scale: [aw, ah, 0] });\n            a.set({ position: [aposx, aposy, aposz] });\n            a.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n            a.set({ stretch: true });\n            a.set({ url: ad2[ai].image, link: ad2[ai].link });\n            a.set({ id: aid });\n        }\n\n    }\n}\n\nfunction setAdz3(ad3) {\n    var ads2List = { PosxTop: 0 - 3, PosyTop: 6, MaxWidth: 0 }\n    var maxPosyEnd = 1;\n    var gridPosz = 6.5 + 0.1;\n    var gridRotax = 0;\n    var gridRotay = 0;\n    var gridRotaz = 0;\n    for (let ai = 0; ai < ad3.length; ai++) {\n        var aw = ad3[ai].width * 0.2;\n        var ah = ad3[ai].height * 0.2;\n        var aposz = gridPosz;\n        var aid = 'btcnft' + ad3[ai].idx;\n        var cid = 'nftback' + ad3[ai].idx;\n        if (ads2List.PosyTop - ah >= maxPosyEnd) {\n            var aposx = ads2List.PosxTop + aw / 2;\n            var aposy = ads2List.PosyTop - ah / 2;\n            ads2List.PosyTop = ads2List.PosyTop - ah;\n            if (aw > ads2List.MaxWidth) { ads2List.MaxWidth = aw; }\n        } else {\n            let oldMaxW = ads2List.MaxWidth;\n            ads2List = { PosxTop: 0 - 3 + oldMaxW, PosyTop: 6, MaxWidth: 0 }\n            var aposx = ads2List.PosxTop + aw / 2;\n            var aposy = ads2List.PosyTop - ah / 2;\n            ads2List.PosyTop = ads2List.PosyTop - ah;\n            if (aw > ads2List.MaxWidth) { ads2List.MaxWidth = aw; }\n        }\n        var b = parcel.getFeatureById(aid);\n        if (b) {\n            var c = parcel.getFeatureById(cid)\n            if (!c) {\n                c = parcel.createFeature('cube');\n                c.set({ scale: [aw, ah, 0] });\n                c.set({ id: cid });\n\n            }\n            c.set({ position: [aposx, aposy, aposz + 0.01] });\n            c.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n            b.set({ position: [aposx, aposy, aposz] });\n            b.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n            b.set({ stretch: true });\n            if (b.get('url') !== ad3[ai].image) {\n                b.set({ url: ad3[ai].image })\n            }\n            b.set({ link: ad3[ai].link })\n\n        } else {\n            let c = parcel.createFeature('cube');\n            c.set({ scale: [aw, ah, 0] });\n            c.set({ position: [aposx, aposy, aposz + 0.01] });\n            c.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n            c.set({ id: cid });\n            let a = parcel.createFeature('image');\n            a.set({ scale: [aw, ah, 0] });\n            a.set({ position: [aposx, aposy, aposz] });\n            a.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n            a.set({ stretch: true });\n            a.set({ url: ad3[ai].image, link: ad3[ai].link });\n            a.set({ id: aid });\n        }\n\n    }\n}\n\nfunction setAdz4(ad4) {\n    var lenad4 = ad4.length;\n    if (lenad4 > 0) {\n        let pizza = parcel.getFeatureById('pizza1');\n        var gridPosx = pizza.position.x;\n        var gridPosy = pizza.position.y + 1;\n        var gridPosz = pizza.position.z - 5;\n        var gridRotax = pizza.rotation.x;\n        var gridRotay = pizza.rotation.y;\n        var gridRotaz = pizza.rotation.z;\n        var aposx = gridPosx + 1.5;\n        for (let i = 0; i < lenad4; i++) {\n            var aposy = gridPosy - ad4[i].y * 0.035;\n            var aposz = gridPosz + ad4[i].x * 0.09;\n            aposx = gridPosx + 1.5 + i * 0.5;\n            var aw = ad4[i].width * 0.2;\n            var ah = ad4[i].height * 0.2;\n            var aid = 'btcnft' + ad4[i].idx;\n            var cid = 'nftback' + ad4[i].idx;\n            var b = parcel.getFeatureById(aid)\n\n            if (b) {\n                var c = parcel.getFeatureById(cid)\n                if (!c) {\n                    c = parcel.createFeature('cube');\n                    c.set({ scale: [aw, ah, 0] });\n                    c.set({ id: cid });\n\n                }\n                c.set({ position: [aposx - 0.01, aposy, aposz] });\n                c.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n                b.set({ position: [aposx, aposy, aposz] });\n                b.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n                b.set({ stretch: true });\n                if (b.get('url') !== ad4[i].image) {\n                    b.set({ url: ad4[i].image })\n                }\n                b.set({ link: ad4[i].link })\n            } else {\n                let c = parcel.createFeature('cube');\n                c.set({ scale: [aw, ah, 0] });\n                c.set({ position: [aposx - 0.01, aposy, aposz] });\n                c.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n                c.set({ id: cid });\n                let a = parcel.createFeature('image');\n                a.set({ scale: [aw, ah, 0] });\n                a.set({ position: [aposx, aposy, aposz] });\n                a.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n                a.set({ stretch: true });\n                a.set({ url: ad4[i].image, link: ad4[i].link });\n                a.set({ id: aid });\n            }\n        }\n    }\n}"}, {"type": "button", "scale": [0.5, 0.5, 0.5], "text": "A", "position": [1, 2.15, 0.45], "rotation": [0, -1.57, 0], "version": "8.6.1", "uuid": "059dadc9-b90d-467a-96e4-974b7b87571f", "script": "feature.on('click', (e) => {\n\nfetch('https://btcnft.pizza/cv/nftorder', {\n        method: 'POST',\n        mode: 'cors',\n    }).then((r) => {\n        return r.json();\n    }).then((ads) => {\n\nif (ads.length > 0) {\n                var ads2 = []\n                var ads3 = []\n                var ads4 = []\n                for (let i = 0; i < ads.length; i++) {\n                    if (ads[i].z == 1) {\n                        setAdz1(ads[i])\n                    } else if (ads[i].z == 2) {\n                        ads2.push(ads[i])\n                    } else if (ads[i].z == 3) {\n                        ads3.push(ads[i])\n                    } else {\n                        ads4.push(ads[i])\n                    }\n                 }\n                if (ads2.length > 0) { setAdz2(ads2) }\n                if (ads3.length > 0) { setAdz3(ads3) }\n                if (ads4.length > 0) { setAdz4(ads4) }\n            }\n\n\n\n    });\n\n\n});\n\n\nfunction setAdz1(ad) {\n    let pizza = parcel.getFeatureById('pizza1');\n    var gridPosx = pizza.position.x;\n    var gridPosy = pizza.position.y + 2;\n    var gridPosz = pizza.position.z - 5.5;\n    var gridRotax = pizza.rotation.x;\n    var gridRotay = pizza.rotation.y;\n    var gridRotaz = pizza.rotation.z;\n    var aposx = gridPosx + 0.1;\n    var aposy = gridPosy - ad.y * 0.04;\n    var aposz = gridPosz + ad.x * 0.1;\n    var aid = 'btcnft' + ad.idx;\n    var cid = 'nftback' + ad.idx;\n    var aw = ad.width * 0.2;\n    var ah = ad.height * 0.2;\n    var b = parcel.getFeatureById(aid)\n    if (b) {\n        var c = parcel.getFeatureById(cid)\n        if (!c) {\n            c = parcel.createFeature('cube');\n            c.set({ scale: [aw, ah, 0] });\n            c.set({ id: cid });\n        }\n        c.set({ position: [aposx - 0.01, aposy, aposz] });\n        c.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n        b.set({ position: [aposx, aposy, aposz] });\n        b.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n        b.set({ stretch: true });\n        if (b.get('url') !== ad.image) {\n            b.set({ url: ad.image })\n        }\n        b.set({ link: ad.link })\n    } else {\n        let c = parcel.createFeature('cube');\n        c.set({ scale: [aw, ah, 0] });\n        c.set({ position: [aposx - 0.01, aposy, aposz] });\n        c.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n        c.set({ id: cid });\n        let a = parcel.createFeature('image');\n        a.set({ scale: [aw, ah, 0] });\n        a.set({ position: [aposx, aposy, aposz] });\n        a.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n        a.set({ stretch: true });\n        a.set({ url: ad.image, link: ad.link });\n        a.set({ id: aid });\n    }\n}\n\nfunction setAdz2(ad2) {\n    let cube2 = parcel.getFeatureById('cube2');\n    var ads2List = { PosxTop: 0 - 3, PosyTop: 6, MaxWidth: 0 }\n    var maxPosyEnd = 1;\n    var gridPosz = 0 - 6.1;\n    var gridRotax = 0;\n    var gridRotay = cube2.rotation.y;\n    var gridRotaz = 0;\n    for (let ai = 0; ai < ad2.length; ai++) {\n        var aw = ad2[ai].width * 0.2;\n        var ah = ad2[ai].height * 0.2;\n        var aposz = gridPosz;\n        var aid = 'btcnft' + ad2[ai].idx;\n        var cid = 'nftback' + ad2[ai].idx;\n        if (ads2List.PosyTop - ah >= maxPosyEnd) {\n            var aposx = ads2List.PosxTop + aw / 2;\n            var aposy = ads2List.PosyTop - ah / 2;\n            ads2List.PosyTop = ads2List.PosyTop - ah;\n            if (aw > ads2List.MaxWidth) { ads2List.MaxWidth = aw; }\n        } else {\n            let oldMaxW = ads2List.MaxWidth;\n            ads2List = { PosxTop: 0 - 3 + oldMaxW, PosyTop: 6, MaxWidth: 0 }\n            var aposx = ads2List.PosxTop + aw / 2;\n            var aposy = ads2List.PosyTop - ah / 2;\n            ads2List.PosyTop = ads2List.PosyTop - ah;\n            if (aw > ads2List.MaxWidth) { ads2List.MaxWidth = aw; }\n        }\n        var b = parcel.getFeatureById(aid);\n        if (b) {\n            var c = parcel.getFeatureById(cid)\n            if (!c) {\n                c = parcel.createFeature('cube');\n                c.set({ scale: [aw, ah, 0] });\n                c.set({ id: cid });\n\n            }\n            c.set({ position: [aposx, aposy, aposz - 0.01] });\n            c.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n            b.set({ position: [aposx, aposy, aposz] });\n            b.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n            b.set({ stretch: true });\n            if (b.get('url') !== ad2[ai].image) {\n                b.set({ url: ad2[ai].image })\n            }\n            b.set({ link: ad2[ai].link })\n\n        } else {\n            let c = parcel.createFeature('cube');\n            c.set({ scale: [aw, ah, 0] });\n            c.set({ position: [aposx, aposy, aposz - 0.01] });\n            c.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n            c.set({ id: cid });\n            let a = parcel.createFeature('image');\n            a.set({ scale: [aw, ah, 0] });\n            a.set({ position: [aposx, aposy, aposz] });\n            a.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n            a.set({ stretch: true });\n            a.set({ url: ad2[ai].image, link: ad2[ai].link });\n            a.set({ id: aid });\n        }\n\n    }\n}\n\nfunction setAdz3(ad3) {\n    var ads2List = { PosxTop: 0 - 3, PosyTop: 6, MaxWidth: 0 }\n    var maxPosyEnd = 1;\n    var gridPosz = 6.5 + 0.1;\n    var gridRotax = 0;\n    var gridRotay = 0;\n    var gridRotaz = 0;\n    for (let ai = 0; ai < ad3.length; ai++) {\n        var aw = ad3[ai].width * 0.2;\n        var ah = ad3[ai].height * 0.2;\n        var aposz = gridPosz;\n        var aid = 'btcnft' + ad3[ai].idx;\n        var cid = 'nftback' + ad3[ai].idx;\n        if (ads2List.PosyTop - ah >= maxPosyEnd) {\n            var aposx = ads2List.PosxTop + aw / 2;\n            var aposy = ads2List.PosyTop - ah / 2;\n            ads2List.PosyTop = ads2List.PosyTop - ah;\n            if (aw > ads2List.MaxWidth) { ads2List.MaxWidth = aw; }\n        } else {\n            let oldMaxW = ads2List.MaxWidth;\n            ads2List = { PosxTop: 0 - 3 + oldMaxW, PosyTop: 6, MaxWidth: 0 }\n            var aposx = ads2List.PosxTop + aw / 2;\n            var aposy = ads2List.PosyTop - ah / 2;\n            ads2List.PosyTop = ads2List.PosyTop - ah;\n            if (aw > ads2List.MaxWidth) { ads2List.MaxWidth = aw; }\n        }\n        var b = parcel.getFeatureById(aid);\n        if (b) {\n            var c = parcel.getFeatureById(cid)\n            if (!c) {\n                c = parcel.createFeature('cube');\n                c.set({ scale: [aw, ah, 0] });\n                c.set({ id: cid });\n\n            }\n            c.set({ position: [aposx, aposy, aposz + 0.01] });\n            c.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n            b.set({ position: [aposx, aposy, aposz] });\n            b.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n            b.set({ stretch: true });\n            if (b.get('url') !== ad3[ai].image) {\n                b.set({ url: ad3[ai].image })\n            }\n            b.set({ link: ad3[ai].link })\n\n        } else {\n            let c = parcel.createFeature('cube');\n            c.set({ scale: [aw, ah, 0] });\n            c.set({ position: [aposx, aposy, aposz + 0.01] });\n            c.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n            c.set({ id: cid });\n            let a = parcel.createFeature('image');\n            a.set({ scale: [aw, ah, 0] });\n            a.set({ position: [aposx, aposy, aposz] });\n            a.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n            a.set({ stretch: true });\n            a.set({ url: ad3[ai].image, link: ad3[ai].link });\n            a.set({ id: aid });\n        }\n\n    }\n}\n\nfunction setAdz4(ad4) {\n    var lenad4 = ad4.length;\n    if (lenad4 > 0) {\n        let pizza = parcel.getFeatureById('pizza1');\n        var gridPosx = pizza.position.x;\n        var gridPosy = pizza.position.y + 1;\n        var gridPosz = pizza.position.z - 5;\n        var gridRotax = pizza.rotation.x;\n        var gridRotay = pizza.rotation.y;\n        var gridRotaz = pizza.rotation.z;\n        var aposx = gridPosx + 1.5;\n        for (let i = 0; i < lenad4; i++) {\n            var aposy = gridPosy - ad4[i].y * 0.035;\n            var aposz = gridPosz + ad4[i].x * 0.09;\n            aposx = gridPosx + 1.5 + i * 0.5;\n            var aw = ad4[i].width * 0.2;\n            var ah = ad4[i].height * 0.2;\n            var aid = 'btcnft' + ad4[i].idx;\n            var cid = 'nftback' + ad4[i].idx;\n            var b = parcel.getFeatureById(aid)\n\n            if (b) {\n                var c = parcel.getFeatureById(cid)\n                if (!c) {\n                    c = parcel.createFeature('cube');\n                    c.set({ scale: [aw, ah, 0] });\n                    c.set({ id: cid });\n\n                }\n                c.set({ position: [aposx - 0.01, aposy, aposz] });\n                c.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n                b.set({ position: [aposx, aposy, aposz] });\n                b.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n                b.set({ stretch: true });\n                if (b.get('url') !== ad4[i].image) {\n                    b.set({ url: ad4[i].image })\n                }\n                b.set({ link: ad4[i].link })\n            } else {\n                let c = parcel.createFeature('cube');\n                c.set({ scale: [aw, ah, 0] });\n                c.set({ position: [aposx - 0.01, aposy, aposz] });\n                c.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n                c.set({ id: cid });\n                let a = parcel.createFeature('image');\n                a.set({ scale: [aw, ah, 0] });\n                a.set({ position: [aposx, aposy, aposz] });\n                a.set({ rotation: [gridRotax, gridRotay, gridRotaz] });\n                a.set({ stretch: true });\n                a.set({ url: ad4[i].image, link: ad4[i].link });\n                a.set({ id: aid });\n            }\n        }\n    }\n}", "id": "nftorder", "soundId": "2", "color": "blue"}, {"type": "image", "scale": [4.7, 1, 0], "url": "https://media-crvox.sfo2.digitaloceanspaces.com/0xE92dEDd00454beE1117C06036769943FBE60B5e7/1631457271149-7a39715c-2a8d-4132-ad86-98a345c331af.png", "position": [-3.15, 1.15, -3.8], "rotation": [0, 4.71239, 0], "version": "14019", "uuid": "ad95471e-1ae7-4f55-810a-66065cba1ed3", "id": "clickupload", "animation": {"destination": null, "keyframes": []}, "stretch": true, "transparent": false, "opacity": "1.00", "updateDaily": false, "uScale": 1, "vScale": 1, "link": "https://btcnft.pizza"}, {"position": [-3.1, 5.7, 0.4], "rotation": [0, 4.71, 0], "scale": [1.2, 0.8, 0], "type": "image", "uuid": "7ba10ad8-afb5-47b7-9542-19889f7902c8", "version": "8.6.1", "url": "https://btcnft.pizza/u/20210911/nf_613caf4ef23e5c65fc56.jpg", "link": "https://discord.gg/NKJQWuBq", "id": "btcnft2", "animation": {"destination": null, "keyframes": []}, "transparent": false, "opacity": "1.00", "updateDaily": false, "uScale": 1, "vScale": 1}, {"position": [-3.1, 6.75, 4.6], "rotation": [0, 4.71, 0], "scale": [0.8, 0.8, 0], "type": "image", "uuid": "7bade046-5d07-48ba-b9b2-1897f657f48c", "version": "8.6.0", "url": "https://btcnft.pizza/u/20210911/nf_613cb8b80b0288990947.jpg", "link": "https://www.cryptovoxels.com/play?coords=NW@113E,439N", "id": "btcnft3", "animation": {"destination": null, "keyframes": []}, "transparent": false, "opacity": "1.00", "updateDaily": false, "uScale": 1, "vScale": 1}, {"position": [-2.7, 5.7, -6.1], "rotation": [0, 4.71, 0], "scale": [0.6, 0.6, 0], "type": "image", "uuid": "b38ff4c4-1cea-4c14-a3f6-4ee9b8c036ee", "version": "8.6.1", "url": "https://lh3.googleusercontent.com/e1MQMozqq5WS6GSaWJEoI64K3YaPzWBeIfLFsFRoG_MbvgTwxLmpgMm4xPynoiH_RhDa2-einXnBDmljrEn0RjOQSS5n4sccBYMq43g=w600", "link": "https://www.cryptovoxels.com/play?coords=NW@113E,439N", "id": "btcnft1", "animation": {"destination": null, "keyframes": []}, "stretch": true, "transparent": false, "opacity": "1.00", "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [3, 3, 0], "url": "https://media-crvox.sfo2.digitaloceanspaces.com/0x4198d4aa9d9f87c9edf6f64202436cd95a4d1856/1631717073363-bfe2fec9-d954-40cf-ab76-9d77e2fa86b5.png", "position": [-3.4, 10.35, 0.75], "rotation": [0, 4.71, 0], "version": "8.5.7", "uuid": "53a8dec8-6f17-4162-b654-4850ff515de8"}, {"type": "image", "scale": [0.8, 0.6, 0], "url": "https://btcnft.pizza/u/20210916/nf_6142ecb7ccf1213c172a.png", "position": [-2.6, 5.1, -6.1], "rotation": [0, 0, 0], "version": "8.6.1", "uuid": "6ddc1b90-8dd0-475e-bbfb-87675fd72eff", "id": "btcnft4", "animation": {"destination": null, "keyframes": []}, "stretch": true, "transparent": false, "opacity": "1.00", "updateDaily": false, "uScale": 1, "vScale": 1, "link": "https://www.cryptovoxels.com/play?coords=N@42E,28N"}, {"type": "image", "scale": [0.8, 0.8, 0], "url": "https://btcnft.pizza/u/20210916/nf_6142f428b2b7cb5a95ef.png", "position": [-3.1, 6.35, -4], "rotation": [0, 4.71239, 0], "version": "8.13.1", "uuid": "352b63d1-e8d0-4c8c-a145-611c6c18fa89", "id": "btcnft5", "animation": {"destination": null, "keyframes": []}, "transparent": false, "opacity": "1.00", "updateDaily": false, "uScale": 1, "vScale": 1, "link": "", "stretch": true}, {"type": "image", "scale": [0.8, 0.6, 0], "url": "https://btcnft.pizza/u/20210916/nf_61430073321a6415fed9.png", "position": [-3.1, 5.3, -3.2], "rotation": [0, 4.71, 0], "version": "8.5.10", "uuid": "891ccdf6-4702-41ae-81ca-941d6af7db3e", "id": "btcnft6", "animation": {"destination": null, "keyframes": []}, "stretch": true, "transparent": false, "opacity": "1.00", "updateDaily": false, "uScale": 1, "vScale": 1, "link": "https://www.cryptovoxels.com/play?coords=SW@425W,589S,4F"}, {"type": "richtext", "scale": [2.4, 0.9, 0], "text": "#tips:\n#Teleport to a new location, you can click the \"BACK\" button on the browser to return.\n\n", "position": [-3.25, 1.65, 0.5], "rotation": [0, 4.71, 0], "version": "8.5.10", "uuid": "51949629-5332-4035-9894-2ecfef9ce720", "inverted": false, "blendMode": "Multiply"}, {"type": "image", "scale": [0.8, 0.8, 0], "url": "https://btcnft.pizza/u/20210917/nf_614405eca9bb958704f8.png", "position": [-3.1, 5.11, -1.3], "rotation": [0, 3.14, 0], "version": "8.6.0", "uuid": "5aef9f5c-6d90-4f3f-be7c-6c54dac4ea7e", "id": "btcnft8", "link": "", "animation": {"destination": null, "keyframes": []}, "stretch": true, "transparent": false, "opacity": "1.00", "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "cube", "scale": [0.2, 0.2, 0.1], "url": "", "position": [-3.4, 1, -5.75], "rotation": [0, 3.14, 0], "version": "8.6.0", "uuid": "e5698bad-61aa-4dc4-bba9-bd6bd06e8f63", "id": "cube2"}, {"type": "image", "scale": [0.9, 0.6, 0], "url": "https://www.cryptovoxels.live/common_resources/treasurechest/treasure-chest-03-close.png", "position": [-2.5, 1.25, 3.25], "rotation": [0, -1.5707963267948966, 0], "version": "13708", "uuid": "b9ecfb80-b513-4390-90ee-f902db77b7c5", "animation": {"destination": null, "keyframes": []}, "id": "treasure-chest-7499", "stretch": true, "transparent": false, "opacity": "1.00", "updateDaily": false, "uScale": 1, "vScale": 1, "script": "const pid = parcel.id\nvar playerw = ''\nconst treasureChestClose = parcel.getFeatureById('treasure-chest-7499')\nconst px = treasureChestClose.position.x\nconst py = treasureChestClose.position.y\nconst pz = treasureChestClose.position.z\nconst rx = treasureChestClose.rotation.x\nconst ry = treasureChestClose.rotation.y\nconst rz = treasureChestClose.rotation.z\nvar sx = treasureChestClose.scale.x\nvar sy = treasureChestClose.scale.y\nvar ct = 0\nvar cf = -1\nvar cn = '0'\nlet featurl = treasureChestClose.get('url')\nif (featurl.indexOf('-open-null.png') !== -1) {\n    sy = sy / 1.5\n    ct = 1\n}\nif (featurl.indexOf('-open-full.png') !== -1) {\n    sy = sy / 3.2\n    ct = 2\n}\nvar treasureChestTryAgin = parcel.getFeatureById('treasure-chest-try-agin')\nif (treasureChestTryAgin) {\n    treasureChestTryAgin.set({ scale: [0.001, 0.001, 0] })\n} else {\n    createTryAgin()\n}\nvar treasureChestText = parcel.getFeatureById('treasure-chest-text')\nif (treasureChestText) {\n    treasureChestText.set({ scale: [0.001, 0.001, 0] })\n} else {\n    createSignText()\n}\nparcel.on('playerenter', (e) => {\n    playerw = e.player.wallet\n})\nfeature.on('click', () => {\n    treasureChestTryAgin = parcel.getFeatureById('treasure-chest-try-agin')\n    treasureChestText = parcel.getFeatureById('treasure-chest-text')\n    switch (ct) {\n        case 0:\n            getLottery()\n            break;\n        default:\n            closeChest()\n            break;\n    }\n})\n\nfunction getLottery() {\n    if (cf === -1) {\n        cf--\n        fetch('https://cryptovoxels.live/p/' + pid + '/7499/' + playerw, {\n            method: 'GET',\n            mode: 'cors',\n        }).then((r) => {\n            return r.json()\n        }).then((res) => {\n            if (res.res >= 0) {\n                cf = res.res\n                cn = res.mes\n                if (cf > 0) {\n                    openChestFull()\n                } else {\n                    openChestNull()\n                }\n            } else {\n                cf = -1\n            }\n\n        })\n    } else {\n        if (cf >= 0) {\n            if (cf > 0) {\n                openChestFull()\n            } else {\n                openChestNull()\n            }\n        }\n    }\n}\n\nfunction openChestNull() {\n    treasureChestClose.set({ scale: [sx, sy * 1.5, 0] })\n    treasureChestClose.set({ url: 'https://cryptovoxels.live/common_resources/treasurechest/treasure-chest-03-open-null.png' })\n    treasureChestTryAgin.set({ position: [px, py + sy * 1.5, pz] })\n    treasureChestTryAgin.set({ scale: [sx * 0.6, sx * 0.6, 0] })\n    treasureChestTryAgin.set({ url: 'https://cryptovoxels.live/common_resources/treasurechest/vr-back-02-mining.png' })\n    treasureChestTryAgin.set({ link: 'https://cryptovoxels.live' })\n    treasureChestText.set({ scale: [0.001, 0.001, 0] })\n    treasureChestText.set({ text: String(cf) })\n    ct = 1\n}\n\nfunction openChestFull() {\n    treasureChestClose.set({ scale: [sx, sy * 3.2, 0] })\n    treasureChestClose.set({ url: 'https://cryptovoxels.live/common_resources/treasurechest/treasure-chest-03-open-full.png' })\n    treasureChestTryAgin.set({ position: [px, py + sy * 1.6 + 0.1 + sx * 0.3, pz] })\n    treasureChestTryAgin.set({ scale: [sx * 0.6, sx * 0.6, 0] })\n    treasureChestTryAgin.set({ url: 'https://cryptovoxels.live/common_resources/treasurechest/vr-back-02-withdraw.png' })\n    treasureChestTryAgin.set({ link: 'https://cryptovoxels.live/#/claim/' + pid + '/7499/' + String(cf) + '/' +cn+ '/' + playerw })\n    treasureChestText.set({ scale: [0.3, 0.2, 0] })\n    treasureChestText.set({ text: String(cf) })\n    ct = 2\n}\n\nfunction closeChest() {\n    treasureChestClose.set({ scale: [sx, sy, 0] })\n    treasureChestClose.set({ url: 'https://cryptovoxels.live/common_resources/treasurechest/treasure-chest-03-close.png' })\n    treasureChestTryAgin.set({ scale: [0.001, 0.001, 0] })\n    treasureChestText.set({ scale: [0.001, 0.001, 0] })\n    ct = 0\n}\n\nfunction createTryAgin() {\n    let tcon = parcel.createFeature('image')\n    tcon.set({ scale: [0.001, 0.001, 0] })\n    tcon.set({ position: [px, py + sy * 2, pz] })\n    tcon.set({ rotation: [rx, ry, rz] })\n    tcon.set({ stretch: true })\n    tcon.set({ id: 'treasure-chest-try-agin' })\n    treasureChestTryAgin = parcel.getFeatureById('treasure-chest-try-agin')\n}\n\nfunction createSignText() {\n    let tcon = parcel.createFeature('sign')\n    tcon.set({ scale: [0.001, 0.001, 0] })\n    tcon.set({ position: [px, py + sy * 1.6 + 0.05, pz] })\n    tcon.set({ rotation: [rx, ry, rz] })\n    tcon.set({ color: \"#e8ba3b\" })\n    tcon.set({ fontSize: '22' })\n    tcon.set({ text: '' })\n    tcon.set({ id: 'treasure-chest-text' })\n    treasureChestText = parcel.getFeatureById('treasure-chest-text')\n}"}], "voxels": "eJzt2zEKwCAQRNEsXtyj5wSJIMGdwHtTioXFL61ZRzbMbHtnKq15Adt0Cvl0Cvl0Cvl0Cvl0Cvl0Cvl0Cvn6Ox0vZ913IEN/p8CKTiGfTiGfTiGfTiHf1z0+/cHpfif82Q1bzXnM", "scripting": false, "brightness": 1.2}, "island": "Miami", "kind": "plot"}}