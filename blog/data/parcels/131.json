{"success": true, "parcel": {"id": 131, "height": 6, "token": null, "name": "DiGiTAL's Lounge", "traffic_visits": 8391, "address": "1 Grid Gardens", "visible": true, "geometry": {"type": "Polygon", "crs": {"type": "name", "properties": {"name": "EPSG:3857"}}, "coordinates": [[[1.03, -0.61], [1.03, -0.7], [0.83, -0.7], [0.83, -0.61], [1.03, -0.61]]]}, "area": 180.0000000000001, "streets": [{"name": "Grid Gardens", "geometry": {"type": "LineString", "coordinates": [[1.05, -0.98], [1.05, -0.44]]}, "visible": true, "kind": "road", "island": "Origin City", "id": 90}, {"name": "Comma Gardens", "geometry": {"type": "LineString", "coordinates": [[1.05, -0.64], [1.33, -0.64]]}, "visible": true, "kind": "road", "island": "Origin City", "id": 968}, {"name": "Pin Terrace", "geometry": {"type": "LineString", "coordinates": [[0.68, -0.72], [1.05, -0.72]]}, "visible": true, "kind": "road", "island": "Origin City", "id": 1481}, {"name": "Alco Throughway", "geometry": {"type": "LineString", "coordinates": [[0.81, -0.72], [0.81, -0.44]]}, "visible": true, "kind": "road", "island": "Origin City", "id": 1261}], "distance": 103.00485425454472, "x1": 83, "x2": 103, "y1": 0, "y2": 6, "z1": -70, "z2": -61, "suburb": "Music District", "is_common": false, "owner": "0x74ec638d8e82ab4e7aacac77ef47a49e735ca7dd", "owner_name": "ConnieDigital", "contributors": ["0x8C62dD796e13aD389aD0bfDA44BB231D317Ef6C6"], "label": "education", "description": "Discover NFT art and collectibles, listen to music, enjoy a video or hang around and make friends.", "sandbox": false, "lightmap_status": "Baked", "grid": false, "price": 0, "content": {"tileset": "/uploads/atlas/a7a67414188e69968456c93c8f7098b0018850f7.png", "voxels": "eJztm0sOgkAQRPmt3HgIDjCn4F4cXcFExczYkMynqlPUwmR8id39wmAg9Gt/MdOe39WwZ+hen91+HNdCEyaWI8OV5YKjdPr33NLHLMZkZiPh0jklX6UZ+eJicvgKF3yN65isC3E+aIx8cTG1fdXqyysjX1yM9kMu5qyvWzZf92RdiPNBY7QfcjHyxcXIFxfj09eciZGvWn15ZfL4smxtvgarnGc9Yv4zNX2Z5XT2DoXIyBcXg+priUa+UH3p/IozXn3F6/m+n4h3fUdj5IuLae+rTF9eGfniYuSLi5EvLka+uBgEX59/iHjzQWPki4tB8FWiL69MC1/b+x+l+/LK+PQV4OaM5kvPl2sx8sXF1PaV+r5F74xMfV+x90+ntUXvjIx8cTHyxcXo+sXF5PJ1hrJ/S4zF2HkASJzsTA==", "features": [{"type": "nft-image", "scale": [1, 1, 0], "url": "https://opensea.io/assets/0x7deb7bce4d360ebe68278dee6054b882aa62d19c/0", "position": [-4.9, 4.15, 4.25], "rotation": [0, 0, 0], "uuid": "9b87b928-cfaa-46a8-8b7f-68d734891168", "inverted": false, "color": false, "stretch": false, "script": "", "transparent": false, "emissiveColorIntensity": "0.50", "version": "15691", "hasFrame": false, "hasGui": true}, {"type": "youtube", "scale": [6.2, 3.4, 0], "url": "https://youtu.be/dqOaq7onIAA", "position": [9.75, 3.25, 0.25], "rotation": [0, 1.5708, 0], "uuid": "20ce26d0-7f9e-4241-b4fa-a3d857934a59", "screenRatio": "169", "script": "", "inverted": false, "version": "16168", "autoplay": true, "rolloffFactor": 0, "volume": 0.65, "previewUrl": "", "loop": true}, {"type": "megavox", "scale": [1, 1, 1.3], "url": "https://gateway.pinata.cloud/ipfs/QmZtZnbEpzuLnx3SMwJAPBDT3GJGd78viBwE1EyyFGgGiT/tapis.vox", "flipX": true, "position": [1.25, 0.75, -1.55], "rotation": [0, 2.62, 0], "uuid": "6c316ebc-eecb-46fc-a987-fe368fb5e885", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [1.6, 1.8, 2], "url": "https://gateway.pinata.cloud/ipfs/QmQAexDkCJdVkGTgy9LWHJPJ8ZVTdXcj3872rvNwhj79DM/table.vox", "flipX": true, "position": [1.25, 0.75, -0.9], "rotation": [0, 2.62, 0], "uuid": "809adac0-f07d-445c-ac09-f60bc5c89296", "animation": {"keyframes": []}, "script": "", "collidable": true}, {"type": "vox-model", "scale": [1.6, 1.8, 2], "url": "https://gateway.pinata.cloud/ipfs/QmQAexDkCJdVkGTgy9LWHJPJ8ZVTdXcj3872rvNwhj79DM/table.vox", "flipX": true, "position": [1.59, 0.75, -2], "rotation": [0, 5.76, 0], "uuid": "bcbe6f23-dfe1-448d-8188-157d35c335ed", "animation": {"keyframes": []}, "script": "", "collidable": true}, {"type": "vox-model", "scale": [1.2, 1.2, 1.2], "url": "https://gateway.pinata.cloud/ipfs/QmZHkGZfYwPKg93AFjBXq1BF2anS1UumTWgG3WkhFzPe2j/table%20ronde2.vox", "flipX": true, "position": [3.2, 0.75, 1.8], "rotation": [0, 2.79, 0], "uuid": "c4b03fd2-f8ad-4ed2-bfdc-3d067a9d865f", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [1.5, 2, 2], "url": "https://gateway.pinata.cloud/ipfs/QmZzhS2ejDw1aHRCSam3aPLk4isza8pWPVtNTQHYjSeFR2/table%20de%20bar.vox", "flipX": true, "position": [-5.5, 1.7, 2.5], "rotation": [0, 4.71, 0], "uuid": "e5f0f699-1604-45d2-a462-e566c1f7e39a", "animation": {"keyframes": []}, "script": "", "collidable": true}, {"type": "vox-model", "scale": [1.5, 2, 2], "url": "https://gateway.pinata.cloud/ipfs/QmZzhS2ejDw1aHRCSam3aPLk4isza8pWPVtNTQHYjSeFR2/table%20de%20bar.vox", "flipX": true, "position": [-4.4, 1.7, 2.5], "rotation": [0, -1.57, 0], "uuid": "c130b1db-879e-4af3-b37c-455a954a98d9", "animation": {"keyframes": []}, "script": "", "collidable": true}, {"type": "vox-model", "scale": [1.5, 2, 2], "url": "https://gateway.pinata.cloud/ipfs/QmZzhS2ejDw1aHRCSam3aPLk4isza8pWPVtNTQHYjSeFR2/table%20de%20bar.vox", "flipX": true, "position": [-3.3, 1.7, 2.5], "rotation": [0, -1.57, 0], "uuid": "6691fc16-7868-4015-ad3e-7363b6ab3730", "animation": {"keyframes": []}, "script": "", "collidable": true}, {"type": "vox-model", "scale": [1.5, 2, 2], "url": "https://gateway.pinata.cloud/ipfs/QmapCb2ZxKtZwxByfG9FWNkdncBk9Y29tjcXZUwTWEqZJS/table%20de%20bar%20angle.vox", "flipX": true, "position": [-6.6, 1.7, 2.5], "rotation": [0, -1.57, 0], "uuid": "879b1345-c67b-41f9-96e4-bba7147a9cd3", "animation": {"keyframes": []}, "script": "", "collidable": true}, {"type": "vox-model", "scale": [2, 1, 2], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-5.8, 1.6, 2.7], "rotation": [0, 5.06, 0], "uuid": "adbfc448-8899-4fd4-92f3-03baf2794d38", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 30, "value": [0, 4.76475, 0]}, {"frame": 60, "value": [0, 4.66003, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 1.4], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-4.7, 1.6, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "afb279a3-3e90-4eed-9481-b25d4a238bdb", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 40, "value": [0, 4.76, 0]}, {"frame": 70, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 2.6], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-3.5, 1.6, 2.65], "rotation": [1.57, 1.57, 0], "uuid": "84949145-24c2-4241-8ef9-15023cf74588", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 50, "value": [0, 4.76, 0]}, {"frame": 100, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 1.4], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-5.95, 1.5, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "609d1796-bb02-4cd7-8780-9bbe7f9e8140", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 30, "value": [0, 4.76475, 0]}, {"frame": 60, "value": [0, 4.66003, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 2.3], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-4.75, 1.5, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "5992da76-25c5-4cd6-bf57-2fb643da98c5", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 30, "value": [0, 4.76475, 0]}, {"frame": 60, "value": [0, 4.66003, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 2.3], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-3.35, 1.5, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "124603cf-572a-4b9e-b986-f001716258cf", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 50, "value": [0, 4.76, 0]}, {"frame": 100, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 2], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-5.75, 1.4, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "2e3dbb9e-f534-45f6-b0eb-8176fcfa150e", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 50, "value": [0, 4.76, 0]}, {"frame": 100, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 0.9], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-4.85, 1.4, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "3c37a402-9edd-4234-a220-302d2278fd91", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 40, "value": [0, 4.76, 0]}, {"frame": 70, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 3.1], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-3.6, 1.4, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "fe18a325-2925-43ab-875f-e055ae26b3ca", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 50, "value": [0, 4.76, 0]}, {"frame": 100, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 2.7], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-5.5, 1.3, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "55489474-01ae-413e-af80-767b51a41208", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 40, "value": [0, 4.76, 0]}, {"frame": 120, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 3.2], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-3.6, 1.3, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "6635f398-233a-48ea-a47f-a3576c173101", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 40, "value": [0, 4.76, 0]}, {"frame": 125, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 2.3], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-5.65, 1.2, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "1bb4365d-f20c-4b0f-859c-469fcb88af0a", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 40, "value": [0, 4.76, 0]}, {"frame": 120, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 2.4], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-4.15, 1.2, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "9f1ccc19-0959-45ff-bb3e-aa5318900055", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 40, "value": [0, 4.76, 0]}, {"frame": 120, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 1.3], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-3, 1.2, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "b5dc0767-bd38-46b8-951c-f9b683727f4c", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 40, "value": [0, 4.76, 0]}, {"frame": 120, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [1.2, 1.2, 1.2], "url": "https://gateway.pinata.cloud/ipfs/QmZHkGZfYwPKg93AFjBXq1BF2anS1UumTWgG3WkhFzPe2j/table%20ronde2.vox", "flipX": true, "position": [4.15, 0.75, 1.2], "rotation": [0, 2.44, 0], "uuid": "75d5cc76-aa01-46ed-a0a4-bb30b8303333", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [1.2, 1.2, 1.2], "url": "https://gateway.pinata.cloud/ipfs/QmZHkGZfYwPKg93AFjBXq1BF2anS1UumTWgG3WkhFzPe2j/table%20ronde2.vox", "flipX": true, "position": [4.55, 0.75, 3.45], "rotation": [0, 4.36, 0], "uuid": "11298a1b-cff3-4464-997a-48a3d27bb3d0", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [1.2, 1.2, 1.2], "url": "https://gateway.pinata.cloud/ipfs/QmZHkGZfYwPKg93AFjBXq1BF2anS1UumTWgG3WkhFzPe2j/table%20ronde2.vox", "flipX": true, "position": [3.25, 0.75, 3], "rotation": [0, 3.67, 0], "uuid": "20720f75-dc75-4b4c-8efe-a53602d1bd14", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [2, 2, 1.8], "url": "https://gateway.pinata.cloud/ipfs/QmZzhS2ejDw1aHRCSam3aPLk4isza8pWPVtNTQHYjSeFR2/table%20de%20bar.vox", "flipX": true, "position": [-6.74, 1.7, 3.65], "rotation": [0, 0, 0], "uuid": "8fb6c08f-e2c7-41ca-8479-36a7507eecff", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 1.8], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-5.8, 1.1, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "8c83fb16-258b-4451-a66f-1a13e0852c04", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 40, "value": [0, 4.76, 0]}, {"frame": 120, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 1.8], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-4.65, 1.1, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "4511998b-3721-40b5-8b7b-7d1925c043e5", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 40, "value": [0, 4.76, 0]}, {"frame": 120, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 2.3], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-3.35, 1.1, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "0ae66514-9e90-4428-9316-092c357b85f9", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 45, "value": [0, 4.76, 0]}, {"frame": 90, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 1], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-6.05, 1, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "fedc7691-18f2-49c4-83fe-e252c867421c", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 40, "value": [0, 4.76, 0]}, {"frame": 120, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 2.6], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-4.9, 1, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "a7af9612-f8be-4c42-9938-28f86c08261d", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 35, "value": [0, 4.76, 0]}, {"frame": 70, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 1.5], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-3.6, 1, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "abda5d8f-8dcb-4a6d-af83-562328286b3d", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 35, "value": [0, 4.76, 0]}, {"frame": 70, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 0.8], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-2.9, 1, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "9035e519-4672-455e-8f84-439137a837f8", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 25, "value": [0, 4.76, 0]}, {"frame": 64, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [1.2, 1.2, 1.2], "url": "https://gateway.pinata.cloud/ipfs/QmZHkGZfYwPKg93AFjBXq1BF2anS1UumTWgG3WkhFzPe2j/table%20ronde2.vox", "flipX": true, "position": [0, 0.75, 2.75], "rotation": [0, 3.84, 0], "uuid": "f73e9bbd-35ed-4313-b291-4dc69a011493", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [1.2, 1.2, 1.2], "url": "https://gateway.pinata.cloud/ipfs/QmZHkGZfYwPKg93AFjBXq1BF2anS1UumTWgG3WkhFzPe2j/table%20ronde2.vox", "flipX": true, "position": [1.5, 0.75, 2.75], "rotation": [0, 2.44, 0], "uuid": "f79250d9-e9d2-4780-9235-e39498cdbf11", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.8, 0.8, 0.8], "url": "https://gateway.pinata.cloud/ipfs/QmTPBUivhwsUGMFHzZStryV6xGcgdtKxJegQ5K2tfvGuoG/pouf%20plein.vox", "flipX": true, "position": [-4.65, 0.75, -1.2], "rotation": [0, 2.09, 0], "uuid": "8cb23130-d1ca-48f3-8904-1a55d516f333", "animation": {"keyframes": []}, "script": "", "collidable": true}, {"type": "vox-model", "scale": [1.2, 1.2, 1.2], "url": "https://gateway.pinata.cloud/ipfs/QmZHkGZfYwPKg93AFjBXq1BF2anS1UumTWgG3WkhFzPe2j/table%20ronde2.vox", "flipX": true, "position": [-0.2, 0.75, 1.1], "rotation": [0, 2.79, 0], "uuid": "65cf26d6-cc77-499f-bb90-9d64286ade57", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [2.7, 3, 3], "url": "https://gateway.pinata.cloud/ipfs/QmRPtU5GmNgZSr4FgnRJag7GQFeNd83DRAWA7sTGKTiair/cacp%20right.vox", "flipX": true, "position": [-0.5, 0.65, -1.5], "rotation": [0, 1.05, 0], "uuid": "b995cdbc-3ba1-4e72-9438-80759f321ffa", "animation": {"keyframes": []}, "script": "", "collidable": true, "version": "8.4.0"}, {"type": "vox-model", "scale": [2.5, 3, 3], "url": "https://gateway.pinata.cloud/ipfs/QmNk2Eoo1ciK9EDyjocnpKv8Z8YHqsYaNGm51D7aP6Ryti/canap%20left.vox", "flipX": true, "position": [0.7, 0.65, -2.6], "rotation": [0, 1.05, 0], "uuid": "3d5705fe-acd9-418a-80b6-7ba4bac51e41", "animation": {"keyframes": []}, "script": "", "collidable": true}, {"type": "image", "scale": [1, 2.4, 0], "url": "https://www.journalacces.ca/wp-content/uploads/sites/3/2020/03/Depositphotos_153541450_l-2015-1600x1066.jpg", "position": [1.45, 1.25, -1.5], "rotation": [1.57, 2.62, 0], "uuid": "055c23ed-1d66-4a9f-9b9a-a01dff79bcf7", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": false, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "vox-model", "scale": [2, 1, 1.8], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-5.8, 0.9, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "5500bf83-af2c-4b5f-8b8a-2a35e7f13d6f", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 40, "value": [0, 4.76, 0]}, {"frame": 120, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 2.3], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-4.5, 0.9, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "9b21cb9d-28b9-4a81-b8d9-aad905348b16", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 40, "value": [0, 4.76, 0]}, {"frame": 120, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [0.8, 0.8, 0.8], "url": "https://gateway.pinata.cloud/ipfs/QmTPBUivhwsUGMFHzZStryV6xGcgdtKxJegQ5K2tfvGuoG/pouf%20plein.vox", "flipX": true, "position": [-4.15, 0.75, -2.75], "rotation": [0, 3.49, 0], "uuid": "b6fec9c5-20a1-47f1-a823-e96bc7eb65d3", "animation": {"keyframes": []}, "script": "", "collidable": true}, {"type": "vox-model", "scale": [0.8, 0.8, 0.8], "url": "https://gateway.pinata.cloud/ipfs/QmTPBUivhwsUGMFHzZStryV6xGcgdtKxJegQ5K2tfvGuoG/pouf%20plein.vox", "flipX": true, "position": [-6.15, 0.75, -1.25], "rotation": [0, 1.05, 0], "uuid": "d8095ec5-431a-4d8a-b5bb-285d4b55e0b5", "animation": {"keyframes": []}, "script": "", "collidable": true}, {"type": "vox-model", "scale": [0.8, 0.8, 0.8], "url": "https://gateway.pinata.cloud/ipfs/QmTPBUivhwsUGMFHzZStryV6xGcgdtKxJegQ5K2tfvGuoG/pouf%20plein.vox", "flipX": true, "position": [-8.25, 0.75, -2.75], "rotation": [0, 1.5707963267948966, 0], "uuid": "3d0cb81d-b6d1-4e4b-b548-9e581f056cdb", "animation": {"keyframes": []}, "script": "", "collidable": true}, {"type": "vox-model", "scale": [0.8, 0.8, 0.8], "url": "https://gateway.pinata.cloud/ipfs/QmTPBUivhwsUGMFHzZStryV6xGcgdtKxJegQ5K2tfvGuoG/pouf%20plein.vox", "flipX": true, "position": [-6.2, 0.75, -3.05], "rotation": [0, 1.5707963267948966, 0], "uuid": "60117dc6-558c-4ee0-937d-d5dcf0c6e706", "animation": {"keyframes": []}, "script": "", "collidable": true}, {"type": "vox-model", "scale": [0.8, 0.8, 0.8], "url": "https://gateway.pinata.cloud/ipfs/QmTPBUivhwsUGMFHzZStryV6xGcgdtKxJegQ5K2tfvGuoG/pouf%20plein.vox", "flipX": true, "position": [-7.5, 0.75, -1.25], "rotation": [0, 1.05, 0], "uuid": "95727b41-9929-466e-ba75-c849d9e3328d", "animation": {"keyframes": []}, "script": "", "collidable": true}, {"type": "vox-model", "scale": [0.8, 0.8, 0.8], "url": "https://gateway.pinata.cloud/ipfs/QmTPBUivhwsUGMFHzZStryV6xGcgdtKxJegQ5K2tfvGuoG/pouf%20plein.vox", "flipX": true, "position": [-8.5, 0.75, -1.75], "rotation": [0, 3.49, 0], "uuid": "25b143fe-6bab-4db0-bce2-b8aff480fcf4", "animation": {"keyframes": []}, "script": "", "collidable": true}, {"type": "vox-model", "scale": [2, 1, 2], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-3.25, 0.9, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "b1cbb343-8bb4-4358-9ffb-624f1737844a", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 40, "value": [0, 4.76, 0]}, {"frame": 120, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 2.7], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-5.5, 0.8, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "e67e644c-1080-47bf-b33a-931f949b3fc6", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 40, "value": [0, 4.76, 0]}, {"frame": 120, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 2.3], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-3.95, 0.8, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "d54f33c2-1b2a-44b5-951b-f46169ebaf47", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 40, "value": [0, 4.76, 0]}, {"frame": 120, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 1.2], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-2.95, 0.75, 2.75], "rotation": [0, 1.5707963267948966, 0], "uuid": "b6c87172-eb10-4444-8796-3020c9a6dbf3", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 40, "value": [0, 4.76, 0]}, {"frame": 120, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 2.1], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-5.7, 0.7, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "d7610482-8848-4b33-82da-257fa191ad89", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 40, "value": [0, 4.76, 0]}, {"frame": 120, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 2.1], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-4.4, 0.75, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "786b6d33-8202-48aa-b45a-354d6a8fc50e", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 40, "value": [0, 4.76, 0]}, {"frame": 120, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [2, 1, 2.1], "url": "https://gateway.pinata.cloud/ipfs/QmQw6rpXofyLwKUAp6G7WQZYZogGJjVQgFy5MaDTrQVsmP/planches%20de%20bar.vox", "flipX": true, "position": [-3.25, 0.75, 2.7], "rotation": [0, 1.5707963267948966, 0], "uuid": "6240c990-6ba0-403b-8198-29a6e55a855a", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 4.66003, 0]}, {"frame": 30, "value": [0, 4.76, 0]}, {"frame": 130, "value": [0, 4.66, 0]}]}, "script": ""}, {"type": "vox-model", "scale": [1.7, 1.5, 1.7], "url": "https://gateway.pinata.cloud/ipfs/QmcxRDzwvS1j3kxZPCkxLvxMPs2Pz5dm33WS8nNGS56Wzj/minibarL.vox", "flipX": true, "position": [-6.67, 0.75, 2.5], "rotation": [0, 3.14, 0], "uuid": "b46a6b17-a24d-4cb7-b31f-be30d93a8448", "animation": {"keyframes": []}, "script": "", "collidable": true}, {"type": "vox-model", "scale": [0.5, 0.5, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmeT3YQe14SkMhm5ZiwudPNTuJRS4kYsur5FUSVppzDPx2/shaker.vox", "flipX": true, "position": [-5.1, 2.05, 2.4], "rotation": [0, 0, 0], "uuid": "6f4643ef-acfb-4784-8dd9-49e93ab34c6c", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.5, 0.5, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmZ6AVjLbdSyatkFgpYhJkwrGeYvaaHEzBeRjYcp31dYs8/drink3.vox", "flipX": true, "position": [-4.7, 2, 2.45], "rotation": [0, 0.7, 0], "uuid": "fad26987-f2b6-4a26-a79e-9eeef8c723a9", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [1.9, 1.5, 1.57], "url": "https://gateway.pinata.cloud/ipfs/Qmdwc8VRT73a8mbN2U1KmikJeeRGdtzbj8w4i4sfFgUugm/minibarR.vox", "flipX": true, "position": [-6.78, 0.75, 3.65], "rotation": [0, 1.5707963267948966, 0], "uuid": "a6f31be6-f80f-4bb1-b900-3470278b280f", "animation": {"keyframes": []}, "script": "", "collidable": true}, {"type": "vox-model", "scale": [1, 2, 1], "url": "https://gateway.pinata.cloud/ipfs/QmdZVUYUWNFwx2HNdaR4abrzHH1VLM9ovkJFsHfj21UmUW/colonne.vox", "flipX": true, "position": [6.75, 0.75, 3.25], "rotation": [0, 1.5707963267948966, 0], "uuid": "6e678849-af4b-4051-9f17-06f266f6e971", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [1, 2, 1], "url": "https://gateway.pinata.cloud/ipfs/QmdZVUYUWNFwx2HNdaR4abrzHH1VLM9ovkJFsHfj21UmUW/colonne.vox", "flipX": true, "position": [6.75, 0.75, -2.75], "rotation": [0, 1.5707963267948966, 0], "uuid": "90551c1e-8b34-424f-8541-5e4606f3faf0", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.7, 5.1, 0.7], "url": "https://gateway.pinata.cloud/ipfs/QmWJishEXAXdmKxpnFeXihRoiLL7oFtZ6WkTH26ke1WnnE/colonne2.vox", "flipX": true, "position": [6.75, 2, 3.23], "rotation": [0, 1.5707963267948966, 0], "uuid": "d230ff46-77e4-4044-b8cf-b867d886d5c3", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.7, 5.1, 0.7], "url": "https://gateway.pinata.cloud/ipfs/QmWJishEXAXdmKxpnFeXihRoiLL7oFtZ6WkTH26ke1WnnE/colonne2.vox", "flipX": true, "position": [6.74, 2, -2.77], "rotation": [0, 1.5707963267948966, 0], "uuid": "970ba33f-0ad7-43d4-8f5d-45bc61885c2d", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.3, 0.4, 0.3], "url": "https://gateway.pinata.cloud/ipfs/QmcGsQVCGgGwccA3mUEcAM3Kkx18vRSbwrQuMfXJrFrQYR/glass1.vox", "flipX": true, "position": [-6.95, 2.06, 3.8], "rotation": [0, 0, 0], "uuid": "e0950925-727b-4cd5-888d-78e950f53028", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.3, 0.4, 0.3], "url": "https://gateway.pinata.cloud/ipfs/QmcGsQVCGgGwccA3mUEcAM3Kkx18vRSbwrQuMfXJrFrQYR/glass1.vox", "flipX": true, "position": [-6.97, 2.06, 3.6], "rotation": [0, 0, 0], "uuid": "87cbc544-d8ef-4f55-ac5e-ad8ea4c5a77f", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.3, 0.4, 0.3], "url": "https://gateway.pinata.cloud/ipfs/QmcGsQVCGgGwccA3mUEcAM3Kkx18vRSbwrQuMfXJrFrQYR/glass1.vox", "flipX": true, "position": [-6.75, 2.06, 3.8], "rotation": [0, 0, 0], "uuid": "3dd5f8e3-f6db-41e0-a3f7-8e5f7d396023", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.3, 0.4, 0.3], "url": "https://gateway.pinata.cloud/ipfs/QmcGsQVCGgGwccA3mUEcAM3Kkx18vRSbwrQuMfXJrFrQYR/glass1.vox", "flipX": true, "position": [-6.74, 2.06, 3.6], "rotation": [0, 1.5707963267948966, 0], "uuid": "b47940cf-6261-4569-896f-5197f7882451", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.5, 0.5, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmYzcM1sjtPWy9FcxdNqf8NyLS9cnJ4UBfVeYwsrH6NjLS/bottle1.vox", "flipX": true, "position": [-6.45, 2, 3.8], "rotation": [0, 0, 0], "uuid": "c4ee18ea-d6cc-460a-827f-16d472b84f26", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.5, 0.5, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmV4UD3Co9YLxFNvVwAEDe2ME9bZ2jv9wFjv7t6Ph7qfsp/bottle2.vox", "flipX": true, "position": [-6.4, 2, 3.55], "rotation": [0, 1.5707963267948966, 0], "uuid": "1ef5f613-bb97-4e89-80f5-ba4cfe9615d4", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "nft-image", "url": "https://opensea.io/assets/0x6dc6001535e15b9def7b0f6a20a2111dfa9454e2/3977", "scale": [1, 1, 0], "position": [-4.9, 3, 4.25], "rotation": [0, 0, 0], "uuid": "3823a039-a971-4a7b-951c-66182cc6e2c3", "script": "", "inverted": false, "color": false, "stretch": false, "version": "15005", "hasGui": true, "hasGuiResizable": false, "hasFrame": false, "proximityToTrigger": 1.77, "isTrigger": false, "triggerIsAudible": false, "transparent": false, "emissiveColorIntensity": "0.50"}, {"type": "vox-model", "scale": [1.2, 1.2, 1.2], "url": "https://gateway.pinata.cloud/ipfs/QmZHkGZfYwPKg93AFjBXq1BF2anS1UumTWgG3WkhFzPe2j/table%20ronde2.vox", "flipX": true, "position": [4.7, 0.75, -1.2], "rotation": [0, 3.49, 0], "uuid": "788577f5-ca5f-4439-8ef2-761728ad20f9", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [1.2, 1.2, 1.2], "url": "https://gateway.pinata.cloud/ipfs/QmZHkGZfYwPKg93AFjBXq1BF2anS1UumTWgG3WkhFzPe2j/table%20ronde2.vox", "flipX": true, "position": [4.8, 0.75, -2.5], "rotation": [0, 2.62, 0], "uuid": "adcb9bcd-2744-461c-a1a0-259dbed01a3a", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [1.2, 1.2, 1.2], "url": "https://gateway.pinata.cloud/ipfs/QmZHkGZfYwPKg93AFjBXq1BF2anS1UumTWgG3WkhFzPe2j/table%20ronde2.vox", "flipX": true, "position": [5.95, 0.75, -2.75], "rotation": [0, 1.05, 0], "uuid": "1b7bd81e-cb15-4616-9d50-97edf95ade77", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.3, 0.3, 0.3], "url": "https://gateway.pinata.cloud/ipfs/QmYy3HFLkr7fsmLD2s8aPubppr9h9gJHgydN5EUn3Qnbr7/eth%20ruby.vox", "flipX": true, "position": [-6.3, 1.75, 2.45], "rotation": [0, 1.5707963267948966, 0], "uuid": "96070bb2-4ffb-4b36-8b59-a17ac60a14ff", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 0, 0]}, {"frame": 30, "value": [0, 6.28319, 0]}]}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.3, 0.3, 0.3], "url": "https://gateway.pinata.cloud/ipfs/QmYy3HFLkr7fsmLD2s8aPubppr9h9gJHgydN5EUn3Qnbr7/eth%20ruby.vox", "flipX": true, "position": [-6.6, 1.75, 2.65], "rotation": [0, 1.5707963267948966, 0], "uuid": "d7fa99b7-d70d-4f83-ba1a-903b0ab5f715", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 0, 0]}, {"frame": 30, "value": [0, 6.28319, 0]}]}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.3, 0.3, 0.3], "url": "https://gateway.pinata.cloud/ipfs/QmYy3HFLkr7fsmLD2s8aPubppr9h9gJHgydN5EUn3Qnbr7/eth%20ruby.vox", "flipX": true, "position": [-6.85, 1.75, 2.9], "rotation": [0, 1.5707963267948966, 0], "uuid": "eeb03ce6-97f4-4878-929d-fe88c40dfdec", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 0, 0]}, {"frame": 30, "value": [0, 6.28319, 0]}]}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "image", "scale": [0.2, 0.2, 0], "url": "https://i.imgur.com/GZwvAIy.png", "position": [-4.66, 2.06, 2.42], "rotation": [1.57, 4.71, 0], "uuid": "fadde84e-77c3-46cc-af18-f89b40e440ee", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "vox-model", "scale": [0.5, 0.7, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmaoVkvJ4Q46bdeLY3tFS8qcA9qdrGbHgExnP1wHAbeeYB/vin.vox", "flipX": true, "position": [4.5, 1.25, 2.25], "rotation": [0, 4.19, 0], "uuid": "43567879-3a0f-4d27-8547-eb67142bad10", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.3, 0.3, 0.3], "url": "https://gateway.pinata.cloud/ipfs/QmeBQ9c79z6SDx49JuWrTSB7eZ8vbmSGR6VNGUmZu9zb8P/drink1.vox", "flipX": true, "position": [4.5, 1.25, 2.65], "rotation": [0, 1.5707963267948966, 0], "uuid": "fd73bbe4-4825-4bbd-b05b-a7037412b315", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.3, 0.3, 0.3], "url": "https://gateway.pinata.cloud/ipfs/QmeBQ9c79z6SDx49JuWrTSB7eZ8vbmSGR6VNGUmZu9zb8P/drink1.vox", "flipX": true, "position": [3.9, 1.25, 1.95], "rotation": [0, 1.5707963267948966, 0], "uuid": "5e21e4cb-f048-4fd9-b0e4-33960523453a", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.3, 0.3, 0.3], "url": "https://gateway.pinata.cloud/ipfs/QmeBQ9c79z6SDx49JuWrTSB7eZ8vbmSGR6VNGUmZu9zb8P/drink1.vox", "flipX": true, "position": [4.2, 1.25, 2], "rotation": [0, 1.5707963267948966, 0], "uuid": "b07e1051-0185-4c82-b7b1-7d4863778492", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.3, 0.3, 0.3], "url": "https://gateway.pinata.cloud/ipfs/QmeBQ9c79z6SDx49JuWrTSB7eZ8vbmSGR6VNGUmZu9zb8P/drink1.vox", "flipX": true, "position": [3.95, 1.25, 2.55], "rotation": [0, 1.5707963267948966, 0], "uuid": "43cd4a90-5341-4271-81b8-c77b018c6882", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.3, 0.4, 0.3], "url": "https://gateway.pinata.cloud/ipfs/QmcGsQVCGgGwccA3mUEcAM3Kkx18vRSbwrQuMfXJrFrQYR/glass1.vox", "flipX": true, "position": [1.5, 0.85, -3.5], "rotation": [1.57, 1.92, 0], "uuid": "93307403-63db-46d6-bdcd-476b82bec81f", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.5, 0.5, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmbHbtyaGhs9feAy67zcKT5Tgjye4vpqhxL11QSZzxndZR/tipjat.vox", "flipX": true, "position": [-2.8, 2.05, 2.4], "rotation": [0, 3.49, 0], "uuid": "88bdd2bd-8be7-451b-8165-9620bac53335", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.2, 0.4, 0.2], "url": "https://gateway.pinata.cloud/ipfs/QmeLrh6PiNbozSCocDTytKRHA9ozSbcrnF8SVAxtvgoVR6/bottle8.vox", "flipX": true, "position": [-5.25, 2.05, 2.5], "rotation": [0, 1.5707963267948966, 0], "uuid": "16aaae34-72cb-47b0-9087-f33a4ead1d41", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.5, 0.5, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmVpVgXRmvSUSu9n26Cy4YU6WApBpqsTo2jhgmCBEQ5Rvg/bottle3.vox", "flipX": true, "position": [1.75, 1.25, -2], "rotation": [0, 0, 0], "uuid": "c89a731d-2792-4d38-94b2-4c4e07d04b84", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.3, 0.3, 0.3], "url": "https://gateway.pinata.cloud/ipfs/QmP41a7QHeAVhgxCurNQhw5tpMyWFaJKFHef992fvvWmCe/drink2.vox", "flipX": true, "position": [1.08, 1.25, -1.5], "rotation": [0, 0, 0], "uuid": "8b0c8c38-bc59-4306-af1e-4401d78c333d", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.3, 0.3, 0.3], "url": "https://gateway.pinata.cloud/ipfs/QmP41a7QHeAVhgxCurNQhw5tpMyWFaJKFHef992fvvWmCe/drink2.vox", "flipX": true, "position": [1, 1.25, -1], "rotation": [0, 1.92, 0], "uuid": "de0bd3e7-de84-4f2b-8e8a-4c6e22fef9d9", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "particles", "scale": [1, 1, 1], "position": [8.45, 0.55, 2.85], "rotation": [0.52, -6.28, 0], "uuid": "0abac5b4-c9d4-4eb2-93d1-221ac9f3ad55", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0.69813, -6.28, 0]}, {"frame": 30, "value": [1.5708, -6.28319, 0]}, {"frame": 60, "value": [0.69813, -6.28, 0]}]}, "script": "", "emitRate": 26, "minSize": 0.1, "maxSize": 0.86, "url": "https://i.imgur.com/jH1Vzut.png"}, {"type": "image", "scale": [5.2, 1.7, 0], "url": "https://i.pinimg.com/originals/92/5a/e8/925ae8b57bea1463f57ac0b029eeb1c1.gif", "position": [8.45, 1.15, 0.25], "rotation": [1.57, 3.14, 1.57], "uuid": "031e6a08-0430-4b2c-8c6e-3fa42403e93e", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "particles", "scale": [1, 1, 1], "position": [8.45, 0.7, -2.35], "rotation": [0.52, 3.32, 0], "uuid": "2f05634c-b360-4546-a2f9-598f54dc4eb0", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0.69813, 3.31613, 0]}, {"frame": 30, "value": [1.5708, 3.31613, 0]}, {"frame": 60, "value": [0.69813, 3.31613, 0]}]}, "script": "", "emitRate": 31, "minSize": 0.1, "maxSize": 0.86, "url": "https://i.imgur.com/jH1Vzut.png"}, {"type": "nft-image", "scale": [2, 2.8, 0], "url": "https://opensea.io/assets/0x5ab21ec0bfa0b29545230395e3adaca7d552c948/9638", "position": [-3.25, 3.25, 4.25], "rotation": [0, 0, 0], "uuid": "660b5195-8c6f-4a40-aef7-2054e20c6657", "inverted": false, "color": false, "stretch": true, "script": "", "version": "15691", "hasGui": true, "hasGuiResizable": false, "hasFrame": true, "transparent": false, "emissiveColorIntensity": "0.50"}, {"type": "image", "scale": [3.5, 1.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmdeXSSMp64GxZ3KFcofUxeeo34sjoKjXWSpu8M1bx96Fa/Connie%20Digital_HQTransparentblack.png", "position": [10.25, 4.65, 1.15], "rotation": [0, 4.71238898038469, 0], "uuid": "c7412234-aa16-461c-9059-ecc4a84c6ffb", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1, "link": "https://twitter.com/conniedigital", "version": "5.8.1"}, {"type": "image", "scale": [2.3, 1.3, 0], "url": "https://gateway.pinata.cloud/ipfs/QmdeXSSMp64GxZ3KFcofUxeeo34sjoKjXWSpu8M1bx96Fa/Connie%20Digital_HQTransparentblack.png", "position": [-9.75, 4.5, 0], "rotation": [0, 1.5708, 0], "uuid": "17eee46b-1dfe-4d2a-89ba-0e219e02f87c", "animation": {"keyframes": []}, "script": "", "blendMode": "Combine", "stretch": true, "transparent": "Background", "updateDaily": false, "uScale": 1, "vScale": 1, "link": "", "version": "12390", "opacity": "1.00"}, {"type": "image", "scale": [0.7, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmUjHNY2b7EwSJyWPSw3b2TCwvCAhupmE28WoS6Qx2RUSG", "position": [5.75, 1.25, -1.75], "rotation": [1.5708, 1.5708, 0], "uuid": "6f2ec7e2-adf2-4698-a8e1-2a1d8dc2f205", "animation": {"keyframes": []}, "script": "", "blendMode": "Combine", "stretch": false, "transparent": "Background", "updateDaily": false, "uScale": 1, "vScale": 1, "link": "https://danky.art", "version": "12390"}, {"type": "image", "scale": [0.5, 0.5, 0], "url": "https://gateway.pinata.cloud/ipfs/QmUjHNY2b7EwSJyWPSw3b2TCwvCAhupmE28WoS6Qx2RUSG", "position": [-6.25, 1.25, 2.75], "rotation": [0, 4.71, 0], "uuid": "acb5b232-1528-433d-a595-0d6d169e283d", "animation": {"keyframes": []}, "script": "", "blendMode": "Combine", "stretch": false, "transparent": "Background", "updateDaily": false, "uScale": 1, "vScale": 1, "link": "https://danky.art"}, {"type": "image", "scale": [7.4, 3, 0], "url": "https://gateway.pinata.cloud/ipfs/QmdeXSSMp64GxZ3KFcofUxeeo34sjoKjXWSpu8M1bx96Fa/Connie%20Digital_HQTransparentblack.png", "position": [-1.75, 5.24, -0.1], "rotation": [4.71239, 3.14159, 0], "uuid": "bcf6b47b-eb31-46b6-be64-d261d89b622a", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1, "link": "https://twitter.com/conniedigital", "version": "12390"}, {"type": "megavox", "scale": [0.8, 0.9, 0.8], "url": "https://gateway.pinata.cloud/ipfs/QmWmhyM54QyLGcW8EMwMnCPYwm4cdyCZE2NeCuXfwSb3iU/pacman%20arcade.vox", "flipX": true, "position": [-7.65, 0.7, 3.65], "rotation": [0, 4.71, 0], "uuid": "017dd334-3511-473d-a215-a849f5446974", "animation": {"keyframes": []}, "script": ""}, {"type": "image", "scale": [0.75, 0.8, 0], "url": "https://thumbs.gfycat.com/HilariousFluidAllosaurus-max-14mb.gif", "position": [-8.24, 2.3, 3.74], "rotation": [0, 3.14, 0], "uuid": "adef0fca-a3a6-4c40-8349-857be57e12ab", "animation": {"keyframes": []}, "script": "", "blendMode": "Combine", "stretch": false, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "vox-model", "scale": [0.2, 0.2, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmcrsHrsWiHnrcLcfgfnPQc8AgXf1Yu6WTQ2TYUVZFDaxd/floppy.vox", "flipX": true, "position": [4, 1.1, 2.25], "rotation": [1.57, 1.75, 0], "uuid": "b9b55833-c377-4528-9369-2acbadd1371a", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.2, 0.2, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmcrsHrsWiHnrcLcfgfnPQc8AgXf1Yu6WTQ2TYUVZFDaxd/floppy.vox", "flipX": true, "position": [3.95, 1.11, 2.2], "rotation": [1.57, 8.38, 0], "uuid": "21bb5193-a165-4764-a509-440bfe87b2e0", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.3, 0.3, 0.3], "url": "https://gateway.pinata.cloud/ipfs/QmQHRUQDJ726yvdFcLkAUTEoU24pK4ziWAT8qSD3VmaGce/tape1.vox", "flipX": true, "position": [-4.15, 2.75, 2.3], "rotation": [0, 0, 0], "uuid": "5d31e87b-e93b-4f22-8d97-8fccad32857b", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 0, 0]}, {"frame": 122, "value": [3.14159, 0, 6.28319]}, {"frame": 244, "value": [6.28319, 0, 12.56637]}]}, "script": "", "link": "https://danky.link/ScreamTape"}, {"type": "vox-model", "scale": [0.3, 0.3, 0.3], "url": "https://gateway.pinata.cloud/ipfs/QmSg6cnTqFiKUGciKYoT1FUrPdiYm7MevmS3XBcP9wAyv5/tape2white.vox", "flipX": true, "position": [-3.9, 2.05, 2.3], "rotation": [0, 4.19, 0], "uuid": "0820774c-1cec-4d88-bce9-1bfbddd47d7e", "animation": {"keyframes": []}, "script": "", "link": "https://danky.link/BlankTape"}, {"type": "vox-model", "scale": [0.3, 0.3, 0.3], "url": "https://gateway.pinata.cloud/ipfs/QmfBjMbd3cLaeQaH7wXfDazGJeiQ89ni6xx4DEiRkAV5nL/tape3laugh.vox", "flipX": true, "position": [-3.65, 2.05, 2.3], "rotation": [0, 4.19, 0], "uuid": "d5f202f8-3079-4d56-af56-3bc0392376b6", "animation": {"keyframes": []}, "script": "", "link": "https://danky.link/LaughTape"}, {"type": "vox-model", "scale": [0.3, 0.3, 0.3], "url": "https://gateway.pinata.cloud/ipfs/Qme4kTvWhUj1RsnNxvGLC7wX2bgsd69GfD1wV27WpdhRFf/joypad.vox", "flipX": true, "position": [-8.25, 1.9, 3.43], "rotation": [0, 1.5707963267948966, 0], "uuid": "44e77988-5772-404d-b104-4e7ca87c52c0", "animation": {"destination": "rotation", "keyframes": [{"frame": 0, "value": [0, 0, 0]}, {"frame": 6, "value": [0.34907, 0, 0]}, {"frame": 9, "value": [-0.34907, 0, 0]}, {"frame": 12, "value": [0, 0, 0]}, {"frame": 42, "value": [0, 0, 0]}, {"frame": 48, "value": [0, 0, 0.34907]}, {"frame": 51, "value": [0, 0, 0]}, {"frame": 64, "value": [0, 0, 0]}, {"frame": 70, "value": [0, 0, -0.34907]}, {"frame": 72, "value": [0, 0, 0]}]}, "script": "", "collidable": true}, {"type": "vox-model", "scale": [0.5, 0.7, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmaoVkvJ4Q46bdeLY3tFS8qcA9qdrGbHgExnP1wHAbeeYB/vin.vox", "flipX": true, "position": [-7.6, 1.25, -2.1], "rotation": [0, 5.93, 0], "uuid": "f6f97767-c6ae-4292-a7c5-d77bb8ebf0e5", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "image", "scale": [0.2, 0.2, 0], "url": "https://gateway.pinata.cloud/ipfs/QmdHn1YSnManDw1jaCagYPNVBbzVuxgdRJ7HvYHr372NCB", "position": [0.98, 1.24, -1.01], "rotation": [1.57, 1.57, 0], "uuid": "0e0170cd-ff1f-45bd-9015-fb30fcaa5614", "animation": {"keyframes": []}, "script": "", "blendMode": "Combine", "stretch": true, "transparent": "Background", "updateDaily": false, "uScale": 1, "vScale": 1, "link": "https://app.tryroll.com/claim/HUE-j8C9AMxM763q"}, {"type": "image", "scale": [0.2, 0.2, 0], "url": "https://gateway.pinata.cloud/ipfs/QmdHn1YSnManDw1jaCagYPNVBbzVuxgdRJ7HvYHr372NCB", "position": [1.1, 1.24, -1.5], "rotation": [-1.57, 1.05, 0], "uuid": "11165eef-6742-4819-97f0-256e68bbf299", "animation": {"keyframes": []}, "script": "", "blendMode": "Combine", "stretch": true, "transparent": "Background", "updateDaily": false, "uScale": 1, "vScale": 1, "link": "https://app.tryroll.com/claim/HUE-j8C9AMxM763q"}, {"type": "image", "scale": [0.2, 0.2, 0], "url": "https://i.imgur.com/GZwvAIy.png", "position": [4.2, 1.25, 1.98], "rotation": [1.57, 1.57, 0], "uuid": "4a75ba13-e84f-43b9-99a4-08bcdd7b6ed7", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [0.2, 0.2, 0], "url": "https://t-images.imgix.net/https%3A%2F%2Fstatic.t-cdn.net%2F5f95fb071e474c5cb53c3c00%2Ftopics%2F5f9b71b8ac99623d6d157133%2F5f9b71b8ac99623d6d157133_87743.png?width=374&w=374&auto=format%2Ccompress&ixlib=js-2.3.1&s=89e6f51d608a21229bf01be69b6a113a", "position": [3.9, 1.25, 1.95], "rotation": [1.57, 0.35, 0], "uuid": "f24cb8e4-69c0-4536-96df-bc52d8a84961", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [0.2, 0.2, 0], "url": "https://i.imgur.com/LnGerBs.png", "position": [4.5, 1.25, 2.64], "rotation": [1.57, 4.19, 0], "uuid": "85aad552-1160-4bc1-951d-c62677b0d34f", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [0.2, 0.2, 0], "url": "https://t-images.imgix.net/https%3A%2F%2Fstatic.t-cdn.net%2F5f95fb071e474c5cb53c3c00%2Ftopics%2F5fb34b3dcd2b94344683b380%2F5fb34b3dcd2b94344683b380_47283.png?width=374&w=374&auto=format%2Ccompress&ixlib=js-2.3.1&s=c65fc6d6cbe6de8ecc0a44a71d713f8c", "position": [4.2, 1.25, 2.5], "rotation": [1.57, 2.62, 0], "uuid": "9b75a909-368b-4850-a6dd-d26ebbe081b3", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "vox-model", "scale": [0.5, 0.5, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmcY59kUYnuAx84jj3B4gNmTfnN3e2eR7ZbCPhZoziKvK9/bottle1.vox", "flipX": true, "position": [-7.05, 1.2, 2.3], "rotation": [0, 1.5707963267948966, 0], "uuid": "0f3c258b-4ce6-45b1-879d-5d0be2d0ba0e", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.5, 0.5, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmRwWzAqpcJ19ug5VNbo8WaB6qzCfwkeGuvCyMXNHL2QMb/bottle2.vox", "flipX": true, "position": [-7, 1.25, -2.25], "rotation": [0, 1.5707963267948966, 0], "uuid": "61eb4b1d-5ec9-4127-b93d-7084730cb519", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.6, 0.6, 0.6], "url": "https://gateway.pinata.cloud/ipfs/QmcFFGr8m6ju6cd3aqzVDe54cvxRdR2ZBuZaD6Es9Krwb5/bottle3.vox", "flipX": true, "position": [-7, 0.8, 2.3], "rotation": [0, 1.5707963267948966, 0], "uuid": "4706a411-66a7-49f5-9623-78f95c57205b", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.5, 0.5, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmVpVgXRmvSUSu9n26Cy4YU6WApBpqsTo2jhgmCBEQ5Rvg/bottle3.vox", "flipX": true, "position": [-6.6, 1.25, 2.65], "rotation": [0, 1.5707963267948966, 0], "uuid": "8c6ef160-4fad-4475-993e-1f6a3a99f872", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.5, 0.5, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmT3Xqk5gVCcB1dPCfTgLxMpZh1ozwzASbme98nEWM2RzT/bottle4.vox", "flipX": true, "position": [-6.6, 0.85, 2.85], "rotation": [0, 1.5707963267948966, 0], "uuid": "0cf8006a-eb56-49b9-9379-a5d953218294", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.5, 0.5, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmcY59kUYnuAx84jj3B4gNmTfnN3e2eR7ZbCPhZoziKvK9/bottle1.vox", "flipX": true, "position": [-7.05, 1.25, 2.45], "rotation": [0, 1.5707963267948966, 0], "uuid": "c6f06619-9dbf-4991-ba7d-c70692cd5f7a", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.5, 0.5, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmcY59kUYnuAx84jj3B4gNmTfnN3e2eR7ZbCPhZoziKvK9/bottle1.vox", "flipX": true, "position": [-7.05, 1.25, 2.75], "rotation": [0, 1.5707963267948966, 0], "uuid": "32c1e358-6eee-45ba-9bcc-8ef022ecb562", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.5, 0.5, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmPoyyAdWAL7aNv74P15xNJS4x6sAmC7c6kvvzYeZsupbt/bottle4.vox", "flipX": true, "position": [-6.85, 1.25, 2.8], "rotation": [0, 0, 0], "uuid": "c47a2241-95ff-4b91-81ab-7aed024e3a3f", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.5, 0.5, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmPoyyAdWAL7aNv74P15xNJS4x6sAmC7c6kvvzYeZsupbt/bottle4.vox", "flipX": true, "position": [-6.85, 1.25, 2.65], "rotation": [0, 0, 0], "uuid": "608fb800-a53d-45d3-b248-5f497a7d5693", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.5, 0.5, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmPoyyAdWAL7aNv74P15xNJS4x6sAmC7c6kvvzYeZsupbt/bottle4.vox", "flipX": true, "position": [-6.85, 1.25, 2.5], "rotation": [0, 0, 0], "uuid": "861c4525-1dc4-4f56-9226-55285c40d00e", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.5, 0.5, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmPoyyAdWAL7aNv74P15xNJS4x6sAmC7c6kvvzYeZsupbt/bottle4.vox", "flipX": true, "position": [-6.85, 1.25, 2.35], "rotation": [0, 0, 0], "uuid": "2f50dbe9-53bb-467e-b74a-864ffecfbede", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.5, 0.5, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmPoyyAdWAL7aNv74P15xNJS4x6sAmC7c6kvvzYeZsupbt/bottle4.vox", "flipX": true, "position": [-6.85, 1.25, 2.23], "rotation": [0, 0, 0], "uuid": "1aa73864-50f9-457b-9867-8c9879c85113", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.5, 0.5, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmV4UD3Co9YLxFNvVwAEDe2ME9bZ2jv9wFjv7t6Ph7qfsp/bottle2.vox", "flipX": true, "position": [-6.6, 1.25, 2.25], "rotation": [0, 4.71238898038469, 0], "uuid": "9cce6fe3-f34f-49e8-b77f-35ca0387b252", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.5, 0.5, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmX7uAzHKdWEFz2Rd9xQLQT9CHGjDhajY9kJwZ8UmUSeUC/bottle7.vox", "flipX": true, "position": [-6.55, 0.8, 2.25], "rotation": [0, 0, 0], "uuid": "35ce48f2-a7d4-4679-8c8a-0d4827a1c69e", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.5, 0.5, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmX7uAzHKdWEFz2Rd9xQLQT9CHGjDhajY9kJwZ8UmUSeUC/bottle7.vox", "flipX": true, "position": [-6.55, 0.8, 2.4], "rotation": [0, 0, 0], "uuid": "33f7dc3a-924b-496a-b87d-32a7183fd2a2", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.5, 0.5, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmQ1bzrgevcJ5BQsuRifUHKPaHYV1ofzMB1hqckYfJSUoe/bottle6.vox", "flipX": true, "position": [-6.55, 0.8, 2.55], "rotation": [0, 0, 0], "uuid": "9d38af98-e625-4e16-be8a-b265268e1a7d", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.6, 0.6, 0.6], "url": "https://gateway.pinata.cloud/ipfs/QmcFFGr8m6ju6cd3aqzVDe54cvxRdR2ZBuZaD6Es9Krwb5/bottle3.vox", "flipX": true, "position": [-7, 0.75, 2.75], "rotation": [0, 1.5707963267948966, 0], "uuid": "b10f4451-c8d7-4604-91fd-f02cab72c5ce", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.5, 0.5, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmfReHpX5eJcnqHfxDr82QFnAS6hpgm1TR22LV3T2A6eWt/bottle5.vox", "flipX": true, "position": [-6.68, 0.8, 2.25], "rotation": [0, 0, 0], "uuid": "8282cf14-8323-4314-a3f4-437d03e9c52e", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.5, 0.5, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmfReHpX5eJcnqHfxDr82QFnAS6hpgm1TR22LV3T2A6eWt/bottle5.vox", "flipX": true, "position": [-6.68, 0.8, 2.4], "rotation": [0, 0, 0], "uuid": "13f70b50-2f88-4013-93f3-35fc3c7ad9a6", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.5, 0.5, 0.5], "url": "https://gateway.pinata.cloud/ipfs/QmfReHpX5eJcnqHfxDr82QFnAS6hpgm1TR22LV3T2A6eWt/bottle5.vox", "flipX": true, "position": [-6.68, 0.8, 2.55], "rotation": [0, 0, 0], "uuid": "b8e8635e-504b-45fd-acd5-12b179dc7978", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.2, 0.5, 0.2], "url": "https://gateway.pinata.cloud/ipfs/QmeLrh6PiNbozSCocDTytKRHA9ozSbcrnF8SVAxtvgoVR6/bottle8.vox", "flipX": true, "position": [-6.8, 0.8, 2.5], "rotation": [0, 1.5707963267948966, 0], "uuid": "937f2f01-7aee-482b-974f-633c290fc0b3", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.2, 0.5, 0.2], "url": "https://gateway.pinata.cloud/ipfs/QmeLrh6PiNbozSCocDTytKRHA9ozSbcrnF8SVAxtvgoVR6/bottle8.vox", "flipX": true, "position": [-6.8, 0.8, 2.25], "rotation": [0, 1.5707963267948966, 0], "uuid": "c6f8cb63-2190-4d0d-a170-8be630d60103", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.4, 0.5, 0.4], "url": "https://gateway.pinata.cloud/ipfs/QmeF62y55Mxf2qAdEH93WWaexM95qRsjMyN23PUSP4SaGB/glass2.vox", "flipX": true, "position": [-7, 0.75, 3.25], "rotation": [0, 1.5707963267948966, 0], "uuid": "4c737410-71fc-4051-9936-30c4a73c658d", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.4, 0.5, 0.4], "url": "https://gateway.pinata.cloud/ipfs/QmeF62y55Mxf2qAdEH93WWaexM95qRsjMyN23PUSP4SaGB/glass2.vox", "flipX": true, "position": [-6.8, 0.75, 3.25], "rotation": [0, 1.5707963267948966, 0], "uuid": "a0015c68-67bb-427a-9d26-cee9be295c6f", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.4, 0.5, 0.4], "url": "https://gateway.pinata.cloud/ipfs/QmeF62y55Mxf2qAdEH93WWaexM95qRsjMyN23PUSP4SaGB/glass2.vox", "flipX": true, "position": [-6.6, 0.75, 3.25], "rotation": [0, 1.5707963267948966, 0], "uuid": "bf178e04-c0e0-44e7-ac37-17675fc2d640", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.4, 0.5, 0.4], "url": "https://gateway.pinata.cloud/ipfs/QmeF62y55Mxf2qAdEH93WWaexM95qRsjMyN23PUSP4SaGB/glass2.vox", "flipX": true, "position": [-7, 0.75, 3.45], "rotation": [0, 1.5707963267948966, 0], "uuid": "6573b4ec-5e8b-4fc2-8ab5-b42d7bb62e35", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.4, 0.5, 0.4], "url": "https://gateway.pinata.cloud/ipfs/QmeF62y55Mxf2qAdEH93WWaexM95qRsjMyN23PUSP4SaGB/glass2.vox", "flipX": true, "position": [-6.8, 0.75, 3.45], "rotation": [0, 1.5707963267948966, 0], "uuid": "94a8a5c1-5a5d-42e2-80c4-d4e9bce4e665", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.4, 0.5, 0.4], "url": "https://gateway.pinata.cloud/ipfs/QmeF62y55Mxf2qAdEH93WWaexM95qRsjMyN23PUSP4SaGB/glass2.vox", "flipX": true, "position": [-6.6, 0.75, 3.45], "rotation": [0, 1.5707963267948966, 0], "uuid": "ad35c7f3-6d0f-46a7-9e83-ab449de51391", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.3, 0.4, 0.3], "url": "https://gateway.pinata.cloud/ipfs/QmcGsQVCGgGwccA3mUEcAM3Kkx18vRSbwrQuMfXJrFrQYR/glass1.vox", "flipX": true, "position": [-7.1, 0.81, 3.65], "rotation": [0, 1.5707963267948966, 0], "uuid": "570809bd-dcd0-4309-aba8-1f17ab9a2284", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.3, 0.4, 0.3], "url": "https://gateway.pinata.cloud/ipfs/QmcGsQVCGgGwccA3mUEcAM3Kkx18vRSbwrQuMfXJrFrQYR/glass1.vox", "flipX": true, "position": [-6.85, 0.81, 3.65], "rotation": [0, 1.5707963267948966, 0], "uuid": "169615a0-07ea-4381-8569-d28395242f47", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.3, 0.4, 0.3], "url": "https://gateway.pinata.cloud/ipfs/QmcGsQVCGgGwccA3mUEcAM3Kkx18vRSbwrQuMfXJrFrQYR/glass1.vox", "flipX": true, "position": [-6.6, 0.81, 3.65], "rotation": [0, 1.5707963267948966, 0], "uuid": "f3b2b106-d44b-4d79-8d59-84ec39ad4ad9", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.3, 0.4, 0.3], "url": "https://gateway.pinata.cloud/ipfs/QmcGsQVCGgGwccA3mUEcAM3Kkx18vRSbwrQuMfXJrFrQYR/glass1.vox", "flipX": true, "position": [-7.1, 0.81, 3.85], "rotation": [0, 1.5707963267948966, 0], "uuid": "40f12130-9d5e-4f67-9d19-50bf13e83902", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.3, 0.4, 0.3], "url": "https://gateway.pinata.cloud/ipfs/QmcGsQVCGgGwccA3mUEcAM3Kkx18vRSbwrQuMfXJrFrQYR/glass1.vox", "flipX": true, "position": [-6.85, 0.81, 3.85], "rotation": [0, 1.5707963267948966, 0], "uuid": "4779cc89-c312-46d1-80c1-508e62883403", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.3, 0.4, 0.3], "url": "https://gateway.pinata.cloud/ipfs/QmcGsQVCGgGwccA3mUEcAM3Kkx18vRSbwrQuMfXJrFrQYR/glass1.vox", "flipX": true, "position": [-6.6, 0.81, 3.85], "rotation": [0, 1.5707963267948966, 0], "uuid": "238ca242-4157-43a9-9ae8-4764f34e73ed", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "vox-model", "scale": [0.5, 0.2, 0.9], "url": "https://gateway.pinata.cloud/ipfs/QmVzveAP48GpSfaSYspXvcDV6sxfaHaEtnw74nQfjN8NWw/freemint.vox", "flipX": true, "position": [-6.8, 1.25, 3.35], "rotation": [0, 1.5707963267948966, 0], "uuid": "fdd6c7f5-baae-4042-8358-d5d5a9602136", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.5, 0.2, 0.9], "url": "https://gateway.pinata.cloud/ipfs/QmVzveAP48GpSfaSYspXvcDV6sxfaHaEtnw74nQfjN8NWw/freemint.vox", "flipX": true, "position": [-6.8, 1.25, 3.75], "rotation": [0, 1.5707963267948966, 0], "uuid": "a343df30-b6bd-4463-bfb6-f36541fd3246", "animation": {"keyframes": []}, "script": ""}, {"type": "image", "scale": [3.9, 4.6, 0], "url": "https://gateway.pinata.cloud/ipfs/QmPL4qKTgR1mz4gaY6GF3SsDLGGZg73r8kPtbGYteHZ7g3", "position": [-7.85, 3.05, 4.24], "rotation": [0, -6.28319, 0], "uuid": "b998e8b0-1f8a-4e9a-b985-e6a53ecbcd0c", "animation": {"keyframes": []}, "script": "", "blendMode": "Combine", "stretch": false, "transparent": "Background", "updateDaily": false, "uScale": 1, "vScale": 1, "version": "15005", "link": "https://opensea.io/assets/0x8a90cab2b38dba80c64b7734e58ee1db38b8992e/1"}, {"type": "image", "scale": [0.13, 0.18, 0], "url": "https://png2.cleanpng.com/sh/e663544d2cc6fc85744d9db4e5734f2c/L0KzQYi4UsIxN6Rpj5GAYUPkSLK9UMQyOWo2UJC9N0a5RYm3UME2OWQ8UKcENUK1RoeAWcc0QF91htk=/5a3a8a60411918.47665800151378595226679738.png", "position": [-5.25, 1.25, -2.25], "rotation": [1.57, 2.09, 0], "uuid": "43dc9b7f-7b10-4074-9ed4-195dd8212d13", "animation": {"keyframes": []}, "script": "", "blendMode": "Combine", "stretch": true, "transparent": "AlphaBlend", "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [0.25, 0.2, 0], "url": "https://purepng.com/public/uploads/large/cards-game-wa8.png", "position": [-4.7, 1.5, -2.5], "rotation": [0.52, 5.24, 0], "uuid": "25c34268-3205-40ae-90af-1be262d5ade8", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})", "blendMode": "Combine", "stretch": true, "transparent": "AlphaBlend", "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [0.25, 0.2, 0], "url": "https://i2.wp.com/freepngimages.com/wp-content/uploads/2017/04/playing-cards-aces.png?w=976", "position": [-5.8, 1.55, -1.75], "rotation": [0.7, 2.44, 0], "uuid": "b9ca59a5-89fb-4de4-bf68-7be356132735", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})", "blendMode": "Combine", "stretch": true, "transparent": "AlphaBlend", "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "vox-model", "scale": [0.5, 1.3, 1.2], "url": "https://gateway.pinata.cloud/ipfs/QmPVTv3vGiAhgg5xpimgGuVzkrFQTcpHLW9SbRtVZYDstR/Genelec.vox", "flipX": true, "position": [9.75, 4, 4], "rotation": [-1.57, 6.28, 0], "uuid": "8aa01c79-cde7-4e12-b1ee-8bd1d895c0fa", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.5, 1.3, 1.2], "url": "https://gateway.pinata.cloud/ipfs/QmPVTv3vGiAhgg5xpimgGuVzkrFQTcpHLW9SbRtVZYDstR/Genelec.vox", "flipX": true, "position": [9.75, 4, -3.05], "rotation": [-1.57, 0, 0], "uuid": "954e7972-d82f-478e-88f3-3fa103808e74", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.7, 1.3, 1.2], "url": "https://gateway.pinata.cloud/ipfs/QmPVTv3vGiAhgg5xpimgGuVzkrFQTcpHLW9SbRtVZYDstR/Genelec.vox", "flipX": true, "position": [7.5, 1.25, 2.75], "rotation": [0, 5.41, 0], "uuid": "f557c2e2-afd3-4203-b512-480d10f6a923", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.7, 1.3, 1.2], "url": "https://gateway.pinata.cloud/ipfs/QmPVTv3vGiAhgg5xpimgGuVzkrFQTcpHLW9SbRtVZYDstR/Genelec.vox", "flipX": true, "position": [7.7, 1.75, -2.5], "rotation": [3.14, 0.7, 0], "uuid": "232563c8-3297-4181-bcff-0f46a982d138", "animation": {"keyframes": []}, "script": ""}, {"type": "vox-model", "scale": [0.3, 0.4, 0.3], "url": "https://gateway.pinata.cloud/ipfs/QmcGsQVCGgGwccA3mUEcAM3Kkx18vRSbwrQuMfXJrFrQYR/glass1.vox", "flipX": true, "position": [-7.25, 1.25, -2], "rotation": [0, 1.5707963267948966, 0], "uuid": "43944b6d-e6d9-4a48-93d2-b14c3a388c26", "animation": {"keyframes": []}, "script": "let Distance_to_player=0.3 // How far the object is relative to the player (negative will be behind)\nlet up_down_constant= -0.70  // Positive object will go higher, negative will go lower. eg: -0.65 places the object where your hands are, approximately. 0 will place the object right above your eyes.\nlet refresh_rate = 50       // Number of milliseconds. Please avoid a refresh rate < 30 as it could crash the grid.\n\nlet clone = true; // change this to false if you want to not clone the object.\n\n//-------------- Do not touch ---------------------------\n\nfunction moveObject(object,player){ // calculates new position of object\n\n  let spherePos = object.position;\n  let playerRotation = player.rotation;\n\n  let xDelta = Distance_to_player*Math.cos(-playerRotation.y+Math.PI/2 + Math.PI);\n  let yDelta = Distance_to_player*Math.tan(playerRotation.x);\n  let zDelta = Distance_to_player*Math.sin(-playerRotation.y+Math.PI/2 + Math.PI);\n\n      var positionRell = [\n    player.position.x - xDelta,\n    player.position.y - yDelta +(up_down_constant),\n    player.position.z - zDelta\n  ];\n\nreturn positionRell\n}\n\nfunction setPosition(newobject,e){ // refreshes the positions\n    newobject.set({position:moveObject(newobject,e.player)})\n  if(!newobject.position || !newobject.rotation){\n    parcel.removeFeature(newobject)\n  }else{\n  setTimeout(()=>{\n    setPosition(newobject,e)\n  },refresh_rate)\n  }\n}\n\nfeature.on('click',e=>{ // On click, create new object and start refreshing the position\nlet newobject = feature\nif(clone){\nnewobject = parcel.createFeature('vox-model')\nnewobject.set({scale:[feature.scale.x,feature.scale.y,feature.scale.z]})\n\nnewobject.set({url:feature._content.url})\nnewobject.position=feature.position\nnewobject.rotation=feature.rotation\n}\n\nsetPosition(newobject,e)\n\n})"}, {"type": "image", "scale": [0.7, 0.6, 0], "url": "https://i.imgur.com/LnGerBs.png", "position": [-9.25, 2.25, 3.5], "rotation": [0, 4.71238898038469, 0], "uuid": "b85f519b-802f-4c22-a61d-e7db8abc81c5", "animation": {"keyframes": []}, "script": "", "blendMode": "Combine", "stretch": true, "transparent": "AlphaBlend", "updateDaily": false, "uScale": 1, "vScale": 1, "link": "https://www.cryptovoxels.com/play?coords=E@651W,143S", "version": "5.44.2"}, {"type": "image", "scale": [0.09, 0.09, 0], "url": "https://gateway.pinata.cloud/ipfs/QmdHn1YSnManDw1jaCagYPNVBbzVuxgdRJ7HvYHr372NCB", "position": [-2.87, 2.12, 2.31], "rotation": [0, 3.49, 0], "uuid": "ca984026-2a5d-4753-ab03-e291fb0bc1ca", "animation": {"keyframes": []}, "script": "", "blendMode": "Combine", "stretch": true, "transparent": "Background", "updateDaily": false, "uScale": 1, "vScale": 1, "link": "https://danky.link/zerion", "version": "5.61.2"}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmaXNK3777PYT33KHiiE4jbhYLiLZHwxTmo1TZLLHJBqG5", "position": [10.25, 2.5, 1.6], "rotation": [0, 4.71238898038469, 0], "uuid": "5303df43-d792-45c2-9110-9182be132519", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "nft-image", "scale": [1.3, 1.3, 0], "url": "https://opensea.io/assets/0xc5ae797a87d9d72fb7d4934a304787164a29857a/106", "position": [10.25, 4.7, 3.75], "rotation": [0, 4.71238898038469, 0], "uuid": "c8bff4b3-92e4-4c8b-81cd-d55ff08b9e83", "script": "", "inverted": false, "color": false, "stretch": false}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmdAFtP1oBhCFXiV5itXu6vvTTaMLYtgJDAor4onAbGAXk", "position": [10.25, 4.25, -1.25], "rotation": [0, 4.71238898038469, 0], "uuid": "15c3925a-ec50-4bf3-a607-6573a386cee8", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1, "version": "5.8.1"}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmfBN8SkxrXAgiXXPEKjqKPya9wizKH8NJYtuK9ef1pdcD", "position": [10.25, 2, 3.5], "rotation": [0, 4.71238898038469, 0], "uuid": "dae0c60c-5e4c-4415-9c4d-e154ebe244e5", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmTdH9QMto9fwTr3A5EBaPfSLxnacCq6KdoNS6M3TRxzzp", "position": [10.25, 2.45, 3.05], "rotation": [0, 4.71238898038469, 0], "uuid": "da9049c1-403e-4d81-930d-121bdab7c825", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmNxTuedHnytPr28e8zudWzboX1gGP5fiSiXTH5RWE4q42", "position": [10.25, 1.5, 3.85], "rotation": [0, 4.71238898038469, 0], "uuid": "bb361cb6-6c72-484b-9634-1b3a381da10e", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmXivjsnHC1yPHFdZVbi2xgABd92Mpc2FJpc1R2XgW7fbj", "position": [10.25, 2.35, 0], "rotation": [0, 4.71238898038469, 0], "uuid": "68a9a886-5e07-450d-b0f1-dba7c6eddc93", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmSrqGVdTZHx8xbxYM8mHjH5YGhiMRvykSc6HCERm9XumR", "position": [10.25, 1.75, -0.5], "rotation": [0, 4.71238898038469, 0], "uuid": "88348e94-d443-4eb2-b03a-29ef5f742a59", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmPYESXpfH7bGD7BB31bjpCkCAMzzxBYTGT4gbdNWdpvFG", "position": [10.25, 1.25, 0.5], "rotation": [0, 4.71238898038469, 0], "uuid": "62a66b83-bc94-443b-bc3b-d6d301995307", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmdsB9pJbq9FLfMo47iEUrWd59FayzyPWN22M1H8V1pe45", "position": [10.25, 2.25, -3.2], "rotation": [0, 4.71238898038469, 0], "uuid": "58d2302d-71fa-45d9-b9aa-9655f7645f72", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmTduAD6BjCm6iakgdSLJyBbxX3XdVA45Tfm7aysUho9ea", "position": [10.25, 1.2, -2.8], "rotation": [0, 4.71238898038469, 0], "uuid": "c97f548e-3b7b-41b9-8c48-5e9c3e7b0fa8", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmR3DMoNGdUdF5uqeNdLHT5jyAicAANwyJhUnsmpP8sjuh", "position": [10.25, 1.25, -1], "rotation": [0, 4.71238898038469, 0], "uuid": "0d07898d-115c-41f0-8c13-75dadf2f8840", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/Qma2AqsbpGC3ypKwqHMipjmm7SYBuwwtTygzhPMt3dUKdw", "position": [10.25, 2.85, -3.25], "rotation": [0, 4.71238898038469, 0], "uuid": "9f440f9c-83b3-45ad-aba1-178d288ae341", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmbSn6e7VXDRWcouX5csh8nR1UT4dKWBQxSQWSuJ3aNM76", "position": [10.25, 1.1, 2.2], "rotation": [0, 4.71238898038469, 0], "uuid": "bbf0248c-50fd-430d-8e59-b7f6cdf16223", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmSdVF1J2KfBCk7mZGJBnJVYebosooK23P83tUFG8hRMDx", "position": [10.25, 2.75, -1.5], "rotation": [0, 4.71238898038469, 0], "uuid": "d6343e3c-6fc5-4746-914a-4f373ceff04e", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmPQ3RKvUsHJCaLXaiN9hkdtcRk9fpRBDFxRcfX2Vj8HG8", "position": [10.25, 3, 2.25], "rotation": [0, 4.71238898038469, 0], "uuid": "7e6d7fc2-04b2-4949-b49b-e98d5e1ac084", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmRFvZbVmrSa5v73kEEKuMMNhSi4UzkFgo1gnp7Bgdn8xh", "position": [10.25, 2.85, 0.3], "rotation": [0, 4.71238898038469, 0], "uuid": "65a6434b-c5ef-4a78-8c57-3512254016bc", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmPP8ESu4fvNeeA6PdVaWeH88g9fG7LGHEsDQmoHE5mNRD", "position": [10.25, 3.25, 3.8], "rotation": [0, 4.71238898038469, 0], "uuid": "be79d389-b2b4-4d29-93da-3451ee4e47e7", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmTCGTxkFYkhdq11fnP3WLZJt7WeaR7qThvKevV1RQ4XGG", "position": [10.25, 1.75, -2.5], "rotation": [0, 4.71238898038469, 0], "uuid": "f952135c-db78-4cf2-9197-98e4666b089b", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmUNnwT1ekJEiqRk3QheT3jGZMrPG3NbmyoAnpbzsQ2k8R", "position": [10.25, 2.25, -1.5], "rotation": [0, 4.71238898038469, 0], "uuid": "b63bd001-4ede-4375-bbdd-b9dc62b57197", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmdKTrYW55sxN7gTAb4yTx1WpDek9g77VAE1owv9EtDvSM", "position": [10.25, 2.05, 1.45], "rotation": [0, 4.71238898038469, 0], "uuid": "87df7fa0-d74a-4989-8bed-c2b1ca9e7ff9", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "sign", "scale": [1.2796874999999999, 0.5, 0.5], "text": "ADD YOUR NAME!", "position": [10.25, 5.25, -3.45], "rotation": [0, 4.71238898038469, 0], "uuid": "98969968-9826-448c-a18e-1dcc3585f4d1", "animation": {"keyframes": []}, "script": "", "link": "https://app.tryroll.com/rewards/HUE/details/virtual-gallery-shout-out", "blendMode": "Multiply", "color": "#ff0000", "background": "#ffffff", "fontSize": "38"}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmQLRDLTfEwDqTa5wR2zxHn7C9JoU1PsPwig81CLgHZwYE", "position": [10.25, 3.2, -1.8], "rotation": [0, 4.71238898038469, 0], "uuid": "b8152e20-70a7-4286-966f-a539fb92b56f", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmZfKxp4zQ43tQAPTg6ccp4wnCpYaX6UTaxXpG5QL6pUpL", "position": [10.25, 3.45, 2.1], "rotation": [0, 4.71238898038469, 0], "uuid": "25528105-7b5c-4a04-8b49-b8f251b53c11", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmSzjiBZzkddRBEwLtBVoEmEuuSbj3fRJpGmnhxotAgUh1", "position": [10.25, 1.75, -3.75], "rotation": [0, 4.71238898038469, 0], "uuid": "74d5e3d2-33c8-4a14-b6e0-cfaf22c9094f", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmRBk3mYF3HJ1EBqoGiAx9GCrZKoc8Kkz9YCC8bBZEvmxu", "position": [10.25, 3.5, -3.25], "rotation": [0, 4.71238898038469, 0], "uuid": "7bbba88f-807f-4219-868d-c08f416f314b", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmZ7mNVmvcs5T4ZvYxFQtXU7MHVxaDuJLVZDocEjRfByeX", "position": [10.25, 3.95, -2.75], "rotation": [0, 4.71238898038469, 0], "uuid": "4e12cf1d-fb9a-4653-a789-d925373e0ddf", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmRT124rAF5GFam95yxz2GYnDCCaq7ydLQH8i73gXXkDMf", "position": [10.25, 3.4, 0.45], "rotation": [0, 4.71238898038469, 0], "uuid": "49640a7c-7145-4aaa-84a6-cb8a967248a7", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmejLZsUXuUQN3Qts3YsY5n5SajHUEEYDTcm1PXkdYHDpf", "position": [10.25, 1.5, 2.25], "rotation": [0, 4.71238898038469, 0], "uuid": "acf0154a-2e1d-418d-bfdf-1194e6aa0c47", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmbaMD6pf6fmULdXcCwumeAVhYq1Ho3N77VLYzsMoy2GhP", "position": [10.25, 4.4, -3.25], "rotation": [0, 4.71238898038469, 0], "uuid": "34028968-860b-4617-a22e-ecf1e773ee80", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2.6, 1, 0], "url": "https://gateway.pinata.cloud/ipfs/QmXtHgoYE8Kn4f4a2isypUwp388xfGue3tRouL4STPYMiN", "position": [10.25, 5.25, -1.5], "rotation": [0, 4.71238898038469, 0], "uuid": "ecca35d1-31cf-4fbc-9e2f-2b76f751b4e4", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1, "version": "5.8.1"}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmVkuic3xEJYVLo9pzuTLi9Ys9UvaVYHhZ34KjLQDwN3mA", "position": [10.25, 3.75, 3.5], "rotation": [0, 4.71238898038469, 0], "uuid": "a804853d-9dcb-428d-a606-1fa98f316085", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1}, {"type": "image", "scale": [2, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmPfUvdLQyAL71waERZgwTSeXDMixt7BTjucwRn1vuipaZ", "position": [10.25, 4.7, -1.65], "rotation": [0, 4.71238898038469, 0], "uuid": "91786048-0bbd-448b-ac04-4a762a27d430", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1, "version": "5.8.1"}, {"type": "image", "scale": [1.8, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmX6vmuRmnSAXz5ASvxKQEtM2CuMhii13QELaFQavREYg9", "position": [10.25, 3.6, -1.3], "rotation": [0, 4.71238898038469, 0], "uuid": "d42625b1-eb93-4f2d-96b0-50069dccf9bf", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1, "version": "5.8.1"}, {"type": "image", "scale": [0.7, 0.7, 0], "url": "https://gateway.pinata.cloud/ipfs/QmT5DBvodwyoc5Pb8hMMzokKCNXhizzyXhkx2DahsVuD3f", "position": [0.75, 1.25, 1.75], "rotation": [1.5708, 1.5708, 0], "uuid": "eaccc389-c7e7-4e84-8f5a-f9a02bd31e16", "animation": {"keyframes": []}, "script": "", "blendMode": "Combine", "stretch": false, "transparent": "Background", "updateDaily": false, "uScale": 1, "vScale": 1, "link": "http://danky.link/newsletter", "version": "12390"}, {"type": "image", "scale": [1.4, 0.5, 0], "url": "https://gateway.pinata.cloud/ipfs/QmT42BRB2KyEpJVEP9pcwNtd187hnGmCvetKeV2ty4TDi4", "position": [10.25, 2.8, 4], "rotation": [0, 4.71238898038469, 0], "uuid": "ce644648-3f3f-4903-8304-972a818eb081", "animation": {"keyframes": []}, "script": "", "blendMode": "Multiply", "stretch": true, "transparent": false, "updateDaily": false, "uScale": 1, "vScale": 1, "version": "5.44.2"}, {"type": "nft-image", "scale": [3, 3, 0], "url": "https://opensea.io/assets/0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d/49", "position": [-4.15, 3, -3.75], "rotation": [0, 3.14159, 0], "version": "16168", "uuid": "62dd224d-f39d-460a-bf32-1b783c0fbbc0", "script": "", "inverted": false, "color": false, "stretch": false, "hasFrame": true, "hasGui": true, "hasGuiRefittable": false, "transparent": false, "emissiveColorIntensity": "0.50"}, {"type": "nft-image", "scale": [1, 1, 0], "url": "https://opensea.io/assets/0x79986af15539de2db9a5086382daeda917a9cf0c/131/", "position": [-9.25, 4.25, 0], "rotation": [0, 4.71239, 0], "version": "15691", "uuid": "ef3e667d-9ebd-4996-b238-c8b6a42d56b5", "script": "", "inverted": false, "color": false, "stretch": false, "hasFrame": true, "hasGui": true, "hasGuiRefittable": false, "transparent": false, "emissiveColorIntensity": "0.50"}, {"type": "nft-image", "url": "https://opensea.io/assets/0xd0a07a76746707f6d6d36d9d5897b14a8e9ed493/4722", "scale": [1, 1, 0], "position": [-6, 3, 4.25], "rotation": [0, 0, 0], "uuid": "10a71881-aed2-456e-a621-9582bc18eefd", "script": "", "inverted": false, "color": false, "stretch": false, "version": "15691", "hasGui": true, "hasGuiResizable": false, "hasFrame": false, "transparent": false, "emissiveColorIntensity": "0.50"}, {"type": "nft-image", "scale": [3, 3, 0], "url": "https://opensea.io/assets/0x60e4d786628fea6478f785a6d7e704777c86a7c6/10098", "position": [-7.4, 3, -3.75], "rotation": [0, 3.14159, 0], "version": "16168", "uuid": "2804493d-8929-42ca-87cb-71eb79da19af", "script": "", "inverted": false, "color": false, "stretch": false, "hasFrame": true, "hasGui": true, "hasGuiRefittable": false, "proximityToTrigger": 1.77, "isTrigger": false, "triggerIsAudible": false, "transparent": false, "emissiveColorIntensity": "0.50"}, {"type": "youtube", "scale": [8.8, 4.1, 0], "url": "https://youtu.be/YsPhl1Tlnww", "position": [2.5, 3, 4.25], "rotation": [0, 0, 0], "version": "15917", "uuid": "365236a5-6b4c-4197-8d18-2d564f87cb73", "autoplay": false, "screenRatio": "169", "inverted": false, "rolloffFactor": 0.3, "volume": 0.84, "loop": true}, {"type": "lantern", "scale": [0.2, 9.4, 0.2], "rotation": [0, 0, 0], "color": "#00c828", "position": [6.9, 3.65, 3.18], "version": "16168", "uuid": "a47ecf65-feef-400f-8ab5-546ea5819cb4", "strength": "100"}, {"type": "lantern", "scale": [0.2, 9.4, 0.2], "rotation": [0, 0, 0], "color": "#00c828", "position": [6.9, 3.75, -2.81], "version": "16168", "uuid": "e3c57750-d7b7-4cd9-a192-13a3b80f4496", "strength": "100"}, {"type": "lantern", "scale": [0.3, -0.4, 11.5], "rotation": [0, 0, 0], "color": "#330849", "position": [7.3, 0.7, 0.35], "version": "16168", "uuid": "bb916146-2427-4586-b94f-826b849b0f01", "strength": 96}, {"type": "lantern", "scale": [0.4, 0.1, 3.2], "rotation": [0, 0, 0], "color": "#66ff00", "position": [-8.6, 3.13, 0], "version": "8.7.4", "uuid": "9d20c624-3c64-4572-8ebc-065d91b52c58", "strength": "16"}, {"type": "lantern", "scale": [0.4, 0.1, 3.2], "rotation": [0, 0, 0], "color": "#66ff00", "position": [-8.25, 3.13, 0], "version": "8.7.4", "uuid": "09d8e172-a3df-44de-9c98-cadc1b2d9bd3", "strength": "7"}, {"type": "lantern", "scale": [0.3, 0.1, 0.3], "rotation": [0, 0, 0], "color": "#00e1ff", "position": [-7.25, 1.7, -2.25], "version": "8.7.4", "uuid": "d8d9f71b-ecbe-442b-a995-c7135fcdd87d", "strength": "17"}, {"type": "lantern", "scale": [0.3, 0.1, 0.3], "rotation": [0, 0, 0], "color": "#ff00aa", "position": [-5.25, 1.7, -2.25], "version": "8.7.4", "uuid": "bfa4e710-5ff3-47eb-a085-a8deca3071f6", "strength": "19"}, {"type": "nft-image", "scale": [1, 1, 0], "rotation": [0, 0, 0], "url": "https://opensea.io/assets/0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb/5163", "color": false, "position": [-6, 4.15, 4.25], "version": "15691", "uuid": "2c4a9bdd-eba1-4752-ba3c-3764a8b53ba3", "hasGui": true, "hasGuiResizable": false, "hasFrame": false, "inverted": false, "stretch": false, "transparent": false, "emissiveColorIntensity": "0.50"}, {"type": "nft-image", "scale": [1.1, 1.6, 0], "url": "https://opensea.io/assets/0x128675d4fddbc4a0d3f8aa777d8ee0fb8b427c2f/7150", "position": [-9.25, 1.75, 1.5], "rotation": [0, 4.71239, 0], "version": "16168", "uuid": "f62154f4-3de7-45a7-a414-430fb336ee0a", "hasGui": true, "hasGuiResizable": false, "hasFrame": false, "inverted": false, "color": false, "stretch": true, "transparent": false, "emissiveColorIntensity": "0.50"}, {"type": "nft-image", "scale": [1, 1, 0], "rotation": [0, 4.71238898038469, 0], "url": "https://opensea.io/assets/0xb228d7b6e099618ca71bd5522b3a8c3788a8f172/2421", "color": false, "position": [-9.25, 3.25, 3.5], "version": "16168", "uuid": "9566f0fe-465d-49b5-b808-04d6b1d3f187", "hasGui": true, "hasGuiResizable": false, "hasFrame": true}], "scripting": false, "palette": ["#ffffff", "#888888", "#000000", "#ff0000", "#ff8080", "#ffff80", "#ac0000", "#d0bb00"], "settings": {}, "brightness": 2.2}, "island": "Origin City", "kind": "plot"}}