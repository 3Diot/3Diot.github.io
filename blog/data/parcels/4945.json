{"success": true, "parcel": {"id": 4945, "height": 13, "token": null, "name": "Ether Cards", "traffic_visits": 2282, "address": "43 Attractive Fork", "visible": true, "geometry": {"type": "Polygon", "crs": {"type": "name", "properties": {"name": "EPSG:3857"}}, "coordinates": [[[-65.41, -1.2], [-65.58, -1.2], [-65.58, -1.060099988], [-65.41, -1.060099988], [-65.41, -1.2]]]}, "area": 237.83002068283753, "streets": [{"name": "Attractive Fork", "geometry": {"type": "LineString", "coordinates": [[-65.39, -1.22], [-65.39, 0]]}, "visible": true, "kind": null, "island": "Vibes", "id": 2044}, {"name": "Appealing Gardens", "geometry": {"type": "LineString", "coordinates": [[-65.6, -1.22], [-65.6, -0.61]]}, "visible": true, "kind": null, "island": "Vibes", "id": 2053}], "distance": 6541.858995716893, "x1": -6558, "x2": -6541, "y1": 0, "y2": 13, "z1": -120, "z2": -106, "suburb": "Vibes", "is_common": false, "owner": "0xa8e162b7d258160f973449c2532234c361586dd4", "owner_name": "NinjaNode", "contributors": ["0xe54f0fcad9b7c61ced45ec30fcd6303511a48ba1", "0x281E6843cC18c8d58eE131309F788879F6C18D10", "0x56Fa492b222ec80652342338BbE7E2E31ed355aB", "0x54dE602b061129632A0d2605e05833b6BedA2172", "0x450eB7c423a9CCB91939F340948E48De9BB55865", "0xa5827c512c312fac59f75e111a1dfa35840ddfcd", "0x0F31D2F80d66FcD1d5dd64418cFc05e7110A413f", "0x81f8e31dd6da93b68c61268d15ce0b878039bfba", "0xA8e162b7d258160f973449c2532234c361586Dd4"], "label": "", "description": null, "sandbox": false, "lightmap_status": "None", "grid": false, "price": null, "content": {"features": [{"type": "cube", "scale": [0.5, 0.5, 0.5], "url": "", "position": [8, 0.75, -2], "rotation": [0, 1.5707963267948966, 0], "version": "7.3.9", "uuid": "97ae86a4-4511-449e-a816-c495cddbfa2a", "script": "//let script_log1 = parcel.getFeatureById('script_log1');\nlet tokenURI = \"https://www.cryptovoxels.com/p/\" + parcel.id;\nlet pLength = 0;\nlet pWidth = 0;\nlet pHeight = 0;\n\nfetch('https://api.thegraph.com/subgraphs/name/protofire/cryptovoxels', {\n\tmethod: 'POST',\n\theaders: {\n\t\t'Content-Type': 'application/json',\n\t},\n  body: JSON.stringify({\n  \tquery: `\n    \tquery MyQuery {\n      parcels(first: 1, where: {tokenURI: \"${tokenURI}\" }) {\n      id\n      tokenID\n      location\n      buildHeight\n      area\n      length\n      width\n      volumeInVoxels\n      owner {\n      \tid\n      }\n      createdAt\n      tokenURI\n       }\n      }\n    `,\n    })\n  })\n\t.then((res) => res.json())\n  .then((result) => {\n//\t\tconsole.log(result.data);\n\t\tpLength = result.data.parcels[0].length;\n\t\tpWidth = result.data.parcels[0].width;\n    pHeight = result.data.parcels[0].buildHeight;\n\t\tconsole.log(pLength);\n\t\tconsole.log(pWidth);\n    console.log(pHeight);\n\n\nlet max_height = 20 - pHeight;\nlet offSet = pHeight - 6\nlet elementHeight = 1;\nlet elementSpacing = 1;\nlet timeShift = 200;\nlet altD = 0.5;\n\n\nlet max_colors = 400;\nlet colors = [];\nfor (let i=1; i < max_colors + 1; i++) {\n  colors.push(rainbow(max_colors, i));\n}\n\n//9, 1, 0.33, 0.5, 0.5, 8\n//-8.5, 1, 0.33, 0.5, 0.5, 8\n//0.25, 1, 4, 17 0.5 0.5\n\n//13 Kind Fork\n//4, 1, 0.25 20\n//-3.5, 1, 0.25\n//0.25, 1, -9.5\n//0.25, 1, 10\n\nlet westX = (pLength / 2) * (-1) + altD;\nlet westY = 1;\nlet westZ = 0.45;\nlet eastX = pLength / 2;\nlet eastY = 1;\nlet eastZ = 0.45;\nlet weSZ = pWidth - 1;\n\nlet northX = 0.25;\nlet northY = 1;\nlet northZ = pWidth / 2;\nlet southX = 0.25;\nlet southY = 1;\nlet southZ = (pWidth / 2) * (-1) + altD;\nlet nsSZ = pLength;\n\n\n\n\nlet wWalls = [];\nlet nWalls = [];\nlet eWalls = [];\nlet sWalls = [];\nlet localSpacing = elementSpacing;\nlet newFeature = null;\nfor (i=max_height;i>-1;i--) {\n  //if (i < (max_height)) { localSpacing = elementSpacing; } else { localSpacing = 0; }\n  console.log(localSpacing);\n  newFeature = parcel.createFeature('cube');\n  newFeature.set({color: '#000000'});\n  newFeature.set({scale:[altD,elementHeight,weSZ]});\n  newFeature.set({position:[westX,offSet + ((elementHeight + localSpacing) * i),westZ]});\n  newFeature.set({collidable: true});\n  newFeature.set({id: cvFeatureId('wWall', i) });\n  //script_log1.set({text: newFeature.id});\n  wWalls.push(newFeature);\n\n  newFeature = parcel.createFeature('cube');\n  newFeature.set({color: '#000000'});\n  newFeature.set({scale:[nsSZ,elementHeight,altD]});\n  newFeature.set({position:[northX,offSet + ((elementHeight + localSpacing) * i),northZ]});\n  newFeature.set({collidable: true});\n  newFeature.set({id: cvFeatureId('nWall', i) });\n  //script_log1.set({text: newFeature.id});\n  nWalls.push(newFeature);\n\n  newFeature = parcel.createFeature('cube');\n  newFeature.set({color: '#000000'});\n  newFeature.set({scale:[altD,elementHeight,weSZ]});\n  newFeature.set({position:[eastX,offSet + ((elementHeight + localSpacing) * i),eastZ]});\n  newFeature.set({collidable: true});\n  newFeature.set({id: cvFeatureId('eWall', i) });\n  //script_log1.set({text: newFeature.id});\n  eWalls.push(newFeature);\n\n  newFeature = parcel.createFeature('cube');\n  newFeature.set({color: '#000000'});\n  newFeature.set({scale:[nsSZ,elementHeight,altD]});\n  newFeature.set({position:[southX,offSet + ((elementHeight + localSpacing) * i),southZ]});\n  newFeature.set({collidable: true});\n  newFeature.set({id: cvFeatureId('sWall', i) });\n  //script_log1.set({text: newFeature.id});\n  sWalls.push(newFeature);\n  //console.log(i);\n}\n\n\nlet lwWall = null;\nlet lnWall = null;\nlet leWall = null;\nlet lsWall = null;\nlet lColor = null;\nsetInterval(()=>{\n  lwWall = wWalls.pop();\n  lnWall = nWalls.pop();\n  leWall = eWalls.pop();\n  lsWall = sWalls.pop();\n  lColor = colors.pop();\n  lwWall.set({ color: lColor});\n  lnWall.set({ color: lColor});\n  leWall.set({ color: lColor});\n  lsWall.set({ color: lColor});\n//script_log1.set({text: lColor});\n//script_log1.set({text: lwWall.id});\n  wWalls.unshift(lwWall);\n  nWalls.unshift(lnWall);\n  eWalls.unshift(leWall);\n  sWalls.unshift(lsWall);\n  colors.unshift(lColor);\n}, timeShift);\n\n});\n\nfunction cvFeatureId(name, number) {\n  return name + number.toString().padStart(2,'0');\n}\n\nfunction rainbow(numOfSteps, step) {\n    // based on http://stackoverflow.com/a/7419630\n    // This function generates vibrant, \"evenly spaced\" colours (i.e. no clustering). This is ideal for creating easily distiguishable vibrant markers in Google Maps and other apps.\n    // Adam Cole, 2011-Sept-14\n    // HSV to RBG adapted from: http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\n    var r, g, b;\n    var h = step / numOfSteps;\n    var i = ~~(h * 6);\n    var f = h * 6 - i;\n    var q = 1 - f;\n    switch(i % 6){\n        case 0: r = 1, g = f, b = 0; break;\n        case 1: r = q, g = 1, b = 0; break;\n        case 2: r = 0, g = 1, b = f; break;\n        case 3: r = 0, g = q, b = 1; break;\n        case 4: r = f, g = 0, b = 1; break;\n        case 5: r = 1, g = 0, b = q; break;\n    }\n\n    var c = \"#\" + (\"00\" + (~ ~(r * 235)).toString(16)).slice(-2) + (\"00\" + (~ ~(g * 235)).toString(16)).slice(-2) + (\"00\" + (~ ~(b * 235)).toString(16)).slice(-2);\n    return (c);\n}\n"}, {"type": "nft-image", "scale": [1, 1, 0], "url": "", "position": [-7.75, 2.75, -2.5], "rotation": [0, 4.71238898038469, 0], "version": "6.11.0", "uuid": "87bd2b5e-8c67-4042-be23-db81dc5c8693"}, {"type": "vox-model", "scale": [2.2, 2.2, 2.2], "url": "https://www.dropbox.com/s/t040m3xqvbeb8xu/coconut.vox", "flipX": true, "position": [-11.8, 9.1, -8.75], "rotation": [0, 0, 0], "version": "7.2.0", "uuid": "461c75c9-9521-4c4a-8a5d-3dbca8a0661e", "animation": {"destination": "position", "keyframes": [{"frame": 0, "value": [0, 0, 0]}, {"frame": 360, "value": [0, 0, 0]}, {"frame": 390, "value": [0, -9.1, 0]}]}}, {"type": "vox-model", "scale": [2.2, 2.2, 2.2], "url": "https://www.dropbox.com/s/t040m3xqvbeb8xu/coconut.vox", "flipX": true, "position": [-12.4, 9.1, -9.25], "rotation": [0, 0, 0], "version": "7.2.0", "uuid": "38653db5-7e8c-4c4f-bafc-a6bdf4161793", "animation": {"destination": "position", "keyframes": [{"frame": 2, "value": [0, 0, 0]}, {"frame": 300, "value": [0, 0, 0]}, {"frame": 330, "value": [0, -9.1, 0]}]}}, {"type": "vox-model", "scale": [2.2, 2.2, 2.2], "url": "https://www.dropbox.com/s/t040m3xqvbeb8xu/coconut.vox", "flipX": true, "position": [-23.65, 9.1, -9.2], "rotation": [0, 0, 0], "version": "7.2.0", "uuid": "62a6be17-e921-4ba5-88c6-4fb1e4ec1d0d", "animation": {"destination": "position", "keyframes": [{"frame": 0, "value": [0, 0, 0]}, {"frame": 200, "value": [0, 0, 0]}, {"frame": 230, "value": [0, -9.1, 0]}]}}, {"position": [8.5, 14, 0.37], "rotation": {"x": 0, "y": 0, "z": 0}, "scale": [0.5, 1, 13], "type": "cube", "uuid": "09e3408a-af45-468c-afb2-db649f7b8e47", "version": "7.3.0", "color": "#eb0031", "collidable": true, "id": "eWall00"}, {"position": [8.5, 16, 0.4], "rotation": {"x": 0, "y": 0, "z": 0}, "scale": [0.5, 1, 13], "type": "cube", "uuid": "cf1a1bcd-829f-40c9-9c47-4fb791863aa6", "version": "7.3.0", "color": "#00e7eb", "collidable": true, "id": "eWall01"}], "voxels": "eJzt2LENg0AUREEjSnMDlETpthxvdILT4pv98eiIXsB2blNvP99D9//uGDqO41Zyc3v9Pl9Dm+2Oh7zHcdwKbv+JubXW66vf4zhuHafXeXrNcVyb0+s8veY4rs3pdZ5ecxzX5vQ6T685jmtzep2n1xzHtTm9ztNrjuPanF7n6TXHcW1Or/P0muO4NqfXeXrNcVyb0+s8veY4rs3pdZ5ecxzX5vQ6T685jmtzep2n1xzHtTm9ztNrjuPanF7n6TXHcW1udq/HvvI502uO4+5yen3t9JrjuLvc7F77H3LtexzHreP0Ok+vOY5rc3qdp9ccx7U5vc7Ta47j2pxe5+k1x3FtTq/z9JrjuDan13l6zXFcm9PrPL3mOK7N6XWeXnMc1+b0Ok+vOY5rc3qdp9ccx7U5vc7Ta47j2pxe5+k1x3Ftbnav92+xR26+O4aO4zjuLvcBpPBOcg=="}, "island": "Vibes", "kind": "plot"}}